:: StoryTitle
KORE


:: StoryData
{
  "ifid": "F2E45620-03C3-48AB-B787-4F1FACFCE5F3",
  "format": "Harlowe",
  "format-version": "3.3.8",
  "start": "Legends of Trii'el Kore",
  "tag-colors": {
    "header": "purple",
    "Battle": "red",
    "startup": "yellow",
    "footer": "orange"
  },
  "zoom": 0.6
}


:: 2036 Summer {"position":"1450,175","size":"100,100"}
Some old photos of a group of friends celebrating. A young redheaded man can be seen kissing a blond girl in one of the photos

[[Pictures]]


:: 2037 Spring {"position":"1550,175","size":"100,100"}
A few photos of a group of friends. A young redheaded man can be seen alone in a few of the photos.

[[Pictures]]


:: A) Startup [startup] {"position":"475,175","size":"100,100"}
(collapse:)[
(set: $day to 1)
<!-- levels-->
(set: $seed to (random:1000000,4999999))
(set: $level1Complete to false)
(set: $newspaperVandalized to false)
(set: $level2Complete to false)
(set: $level3Complete to false)
(set: $level4Complete to false)
(set: $level5Complete to false)
(set: $level6Complete to false)
(set: $level7Complete to false)
(set: $level8Complete to false)
(set: $level9Complete to false)
(set: $level10Complete to false)
(set: $level11Complete to false)
(set: $level12Complete to false)
(set: $level13Complete to false)
(set: $hackableSites to (a: "Level 1"))

<!-- starting player money-->

<!-- Computer Parts -->
(display: "Computer Parts")
(set: $koresPCParts to (a: ))
(set: $usedRAM to 0)
<!-- WIP Arrays for downloads-->
(display:"Programs")
(set: $downloads to (a:))
(set: $downloads to it + (a:$bruteForce,$ICEPick))

<!-- emails reset -->
(set: $emailNotif to 0)

<!-- botnet -->
(display: "C2CasinoServer")
(set:$botnet to (a:$C2CasinoServer))
(set:$playerICE to 100)
(set: $botActive to false)
(set: $botnetCount to 1)
(display: "Programs")
(set: $shopInventory to (a:))
(display:"Player")
]


:: Bank {"position":"250,750","size":"100,100"}
<h4>Welcome to</h4>
<br>
<h3>1st Bank of Un'taeko</h3>
<br>
<br>
<br>
<br>
Checking Account ending in 31173:
<br>
Current Balance:
$playerMoney^^CR^^




:: Bank Battle {"position":"250,875","size":"100,100"}
[[Hack the Bank]]


:: Bank Boss {"position":"250,1525","size":"100,100"}
(hook:"bankBoss")[(set: $bankAttacks to (ds: $ICEPick, $poison, $bruteForce, $defrag, $repairICE))
(set: $bankBoss to (dm:"Name", "Un'taeko Ntl Bank", "Max Health",1000, "Health", 1000, "Max ICE", 1000, "ICE", 1000, "Bandwidth", 4, "Attack",10, "Attacks", $bankAttacks,"Poisoned", false, "Glitched", false))

(set: $bankServer to (dm: "Name", "Untaeko National Bank", "Motherboard", $advancedMotherboard, "Core1", $emeraldCore, "Core2", $rubyCore, "Core3", $rubyCore, "Core4", $rubyCore, "Core5", "None", "Core6", "None", "RAM Slots", 2,"RAM Slot 1", $16GBRAM,"RAM Slot 2", $16GBRAM, "RAM Slot 3", $16GBRAM, "RAM Slot 4", $16GBRAM, "RAM Slot 5", "None", "RAM Slot 6", "None", "RAM Slot 7", "None", "RAM Slot 8", "None", "Cooling System", $advancedCooler, "Network Card", $advancedNetworkCard))]


:: Bank Won {"position":"250,1400","size":"100,100"}
(set: $player's Money to 999999999)

You weren't really supposed to be able to do that, but, uh. Congratulations. You're rich.

[[Home]]


[[Browser]] 


:: Battle {"position":"2050,1050","size":"200,200"}
(collapse:)[
<!-- Enemy Core Check -->
(set: $allEnemyCores to (a:$enemyPC's "Core1", $enemyPC's "Core2", $enemyPC's "Core3", $enemyPC's "Core4", $enemyPC's "Core5", $enemyPC's "Core6", ))
(set: $rubyMultiplier to 1)
(for: each _core where _core is $rubyCore, $allEnemyCores)[
	(set: $rubyMultiplier to it*2)
]

(set: $playerHealth to $playerMaxHealth)
(set: $activeBots to (a:))
(set: $availableBots to $botnet)
(if: $allKoresCores contains $sapphireCore)[
	(for: each _Core where _Core is $sapphireCore or it is $diamondCore, ...$allKoresCores)[
    	(set: $playerMaxHealth to it +50)
    	(if: $computerStats's "Cooling System" is $advancedCooler)[
        	(set: $playerMaxHealth to it +100)
            ]
    	(else-if: $computerStats's "Cooling System" is $specialCooler)[
        	(set: $playerMaxHealth to it +200)
            ]
    ]
    (set: $playerHealth to $playerMaxHealth)
]
(set: $log to "you")
(set:$maxBotnetHealth to 100*$botnetCount)
(set:$botnetHealth to $maxBotnetHealth)
(set: $enemyHealth to $enemy's Health)
(set:$enemyMaxHealth to $enemy's Health)
(set:$enemyMaxICE to $enemy's "Max ICE")
(set:$enemyICE to $enemy's "ICE")]
(hook:"Battle")[(collapse:)[
(if:$enemyHealth <1)[$winResult]]
<div>(float-box:"X","Y")+(b4r:"solid","double","double","solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)[
<div>
=|=
<div>{
(css: "margin: 0.1px; width: 20em; height: 9em; overflow:hidden;")+(float-box: "=X====","=Y====")+(b4r:"solid","double","double","solid")+(b4r-color:(mix: 0.5, white, 0.5, #00f))+(b4r-size:5,5,10,10)[
	Kore HP:     	$playerHealth/$playerMaxHealth
	{
	(box:"X")+(b4r:"solid","double","double","solid")+(b4r-size: 2,4,4,2)+(b4r-color: red)+(css:"padding:0.1px; margin:0.1px;")[
    	(meter:bind $playerHealth, $playerMaxHealth, "X",(gradient: 90, 0, red, 1, orange))
    ]}
	ICE:
	$playerICE/$playerMaxICE
    
    	(box:"X")+(b4r:"solid","double","double","solid")+(b4r-size: 2,4,4,2)+(b4r-color: blue)+(css:"padding:0.1px; margin:0.1px;")[

	(meter:bind $playerICE, $playerMaxICE, "X",(gradient: 90, 0, blue, 1, purple))
    ]
]
=|=
(float-box:"====X=","=Y====")+(css:"padding: 15px; margin: 0.1px; width: 50em; height: 9em; overflow:hidden;")+(b4r:"solid","double","double","solid")+(b4r-color:red)+(b4r-size:5,5,10,10)[
	(print: (str:$enemyName) + " HP: " + (str:$enemyHealth) + "/" +(str:$enemyMaxHealth))
	(box:"X")+(b4r:"solid","double","double","solid")+(b4r-size: 2,4,4,2)+(b4r-color: red)+(css:"padding:0.1px; margin:0.1px;")[
    	(meter:bind $enemyHealth, $enemyMaxHealth, "X",(gradient: 90, 0, red, 1, orange))
    ]
ICE: $enemyICE/$enemyMaxICE
    
    	(box: "X")+(b4r:"solid","double","double","solid")+(b4r-size: 2,4,4,2)+(b4r-color: blue)+(css:"padding:0.1px; margin:0.1px;")[

	(meter:bind $enemyICE, $enemyMaxICE, "X",(gradient: 90, 0, blue, 1, purple))
    ]]}
]</div>
</div>
<div id="log">
(float-box: "=XXXXXXXX=","=======YYYYYYYY=")[
(display:"Log")]
</div>
</div>

]
</div>
]



:: Bed {"position":"900,325","size":"100,100"}
(if: $level1Complete is true)[
	(button:)[
    	(link:"Go to Bed?")[
			(set: $day to it +1)
	    	(go-to:"Home")
        	(set: $playerHealth to $playerStat's "Max Health")
		]
    ]
    (button:)[
    	(link:"Nevermind")[
    		(go-to:"Home")
    	]
    ]
]
(else:)[
You aren't tired yet, but you can save your game.]
(button:)[(link:"Save game?")[
  (if:(save-game:"Slot A"))[
	(if: (saved-games:) contains "Slot A")[
  	
Saved to Slot A!
	[[Home]] 
    [[Main Menu]] 
  ]
  ](else: )[
    Sorry, I couldn't save your game.
  ]
]
]
(button:)[
	(link:"Nevermind")[
		(go-to:"Home")
	]
]


:: Bench {"position":"1800,225","size":"100,100"}
(float-box:"X", "Y")+(b4r: "outset")+(b4r-color:purple)+(b4r-size: 25)[

	(hook: "ComputerSelect")[
    {	(float-box:"=======X=", "YY============")+(css: "z-index:2; margin-top:25px; margin-right:25px; overflow:hidden;")[
    	(button:)+(color:purple)[
        	(link-goto: "Home","Home")
        ]
    ]
		(hook: "ComputerSelectDialogue")[
			Here you can work on your PC, or build a new one.
		]
		(button:)[
        	(link-reveal: "Work on main PC")[
        		(hook: "bench")[
					(hide:?ComputerSelectDialogue)
					<h2>Installed</h2>
					|====
					<h3>Processing Cores</h3>
					Slot 1:
					(print: $computerStats's "Core1"'s "Name")<br>
					Slot 2:
					(print: $computerStats's "Core2"'s "Name")<br>
					(if: $computerStats's "Core3" is not "None" and it is not "Empty")[
						:
						(print:"Slot 3: " +  $computerStats's "Core3"'s "Name")<br>
                    ]
                	(if: $computerStats's "Core3" is "Empty")[
        				(print:"Slot 3: " + "Empty")<br>
        			]
        				(if: $computerStats's "Core4" is not "None" and it is not "Empty")[
                			Slot 4:
							(print: $computerStats's "Core4"'s "Name")<br>
                        ]
        				(if: $computerStats's "Core4" is "Empty")[
        					Slot 4:
        					(print: "Empty")<br>
        				]
        				(if: $computerStats's "Core5" is not "None" and it is not "Empty")[
        					Slot 5:
							(print: $computerStats's "Core5"'s "Name")<br>
                        ]
        				(if: $computerStats's "Core5" is "Empty")[
        					Slot 5:
        					(print: "Empty")<br>
        				]
        				(if: $computerStats's "Core6" is not "None" and it is not "Empty")[
        					Slot 6:
							(print: $computerStats's "Core6"'s "Name")<br>
                        ]
       					(if: $computerStats's "Core6" is "Empty")[
        					Slot 6:
        					(print: "Empty")<br>
        				]
   						=|===
   						<h3>RAM</h3>
                        Slot 1:
   						(print: $computerStats's "RAM Slot 1"'s "Name")<br>
                        Slot 2:
						(print: $computerStats's "RAM Slot 2"'s "Name")<br>
        				(if: $computerStats's "RAM Slot 3" is not "None" and it is not "Empty")[
							(print:"Slot 3: " + $computerStats's "RAM Slot 3"'s "Name")<br>
                        ]
                        (if: $computerStats's "RAM Slot 3" is "Empty")[
							(print: "Slot 3: Empty")<br>
                        ]

        				(if: $computerStats's "RAM Slot 4" is not "None" and it is not "Empty")[
							(print:"Slot 4: " +  $computerStats's "RAM Slot 4"'s "Name")<br>
                        ]
        				(if: $computerStats's "RAM Slot 5" is not "None" and it is not "Empty")[
							(print:"Slot 5: " +  $computerStats's "RAM Slot 5"'s "Name")<br>
                        ]
        				(if: $computerStats's "RAM Slot 6" is not "None" and it is not "Empty")[
							(print:"Slot 6: " +  $computerStats's "RAM Slot 6"'s "Name")<br>
                        ]        
        				(if: $computerStats's "RAM Slot 7" is not "None" and it is not "Empty")[
							(print:"Slot 7: " +  $computerStats's "RAM Slot 7"'s "Name")<br>
                        ]
        				(if: $computerStats's "RAM Slot 8" is not "None" and it is not "Empty")[
							(print:"Slot 8: " +  $computerStats's "RAM Slot 8"'s "Name")<br>
                         ]
        				(if: $computerStats's "RAM Slot 4" is "Empty")[
							(print:"Slot 4: " +  "Empty")<br>
                        ]
        				(if: $computerStats's "RAM Slot 5" is "Empty")[
							(print: "Slot 5: Empty")<br>
                        ]
        				(if: $computerStats's "RAM Slot 6" is "Empty")[
							(print: "Slot 6: Empty")<br>
                        ]        
        				(if: $computerStats's "RAM Slot 7" is "Empty")[
							(print: "Slot 7: Empty")<br>
                        ]
        				(if: $computerStats's "RAM Slot 8" is "Empty")[
							(print: "Slot 8: Empty")<br>
                            ]
        				==|==
    					<h3>Motherboard</h3>
    					(print:$computerStats's "Motherboard"'s "Name")
    					===|=
    					<h3>Cooling System</h3>
                        (if: $computerStats's "Cooling System" is not "Empty")[
    					(print: $computerStats's "Cooling System"'s "Name")]
                        (else:)[(print: "Empty")]
						====|
    					<h3>Network Card</h3>
                        (if: $computerStats's "Network Card" is not "Empty")[
    					(print: $computerStats's "Network Card"'s "Name")]
                        (else:)[(print: "Empty")]
   
   						|==|
   						<h2>Spare Parts</h2>
						(set: _arrayNumber to 0)<br>
						|====
    					Cores:
						(for: each _item, ...$koresSpareParts)[
    						(set: _arrayNumber to it +1)
    						(if: _item's "Slot" is "Core")[
        					(set: $core1ID to _arrayNumber)
    						(button:)[
                            	(link: _item's "Name")[
        							Swap (print: _item's "Name") into:
                    				(button:)[
                                    	(link:  $computerStats's Core1's Name)[
                                        	(print: "
                        					(set: $koresSpareParts to it + (a:$computerStats's Core1))
                            				(set:  $computerStats's Core1 to $koresSpareParts's $core1ID)
                            				(set: _partArray to (find: _part where _part's Name is $koresSpareParts's $core1ID's Name, ...$koresSpareParts))
                            				(set: $koresSpareParts to it - _partArray)
                            				(if: _partArray's length is >1)[
                            					(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            					(set: $koresSpareParts to it + _partArray)
                                            ]
                              				(text: $computerStats's Core1's Name)  slotted in successfully
                           					(rerun: ?bench)")
                        				]
                    				]
                    				(button:)[
                                    	(link:  $computerStats's Core2's Name)[
                                        	(print: "
                        						(set: $koresSpareParts to it + (a:$computerStats's Core2))
                            					(set:  $computerStats's Core2 to $koresSpareParts's $core1ID)
                            					(set: _partArray to (find: _part where _part's Name is $koresSpareParts's $core1ID's Name, ...$koresSpareParts))
                            					(set: $koresSpareParts to it - _partArray)
                            					(if: _partArray's length is >1)[
                            						(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            						(set: $koresSpareParts to it + _partArray)
												]
												(text: $computerStats's Core2's Name)  slotted in successfully
                           						(rerun: ?bench)"
                                            )
                       				]
                    			]
                                
                            	(if: $computerStats's "Core3" is not "None"and it is not "Empty")[
                    				(button:)[
                                    	(link: $computerStats's Core3's Name)[
                                        	(print: "
                        					(set: $koresSpareParts to it + " + "(a:$computerStats's Core3))
                            				(set:  $computerStats's Core3" + " to $koresSpareParts's $core1ID)
                            				(set: _partArray to (find: _part where _part's Name is $koresSpareParts's $core1ID's Name, ...$koresSpareParts))
                            				(set: $koresSpareParts to it - _partArray)
                            				(if: _partArray's length is >1)[
                            					(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            					(set: $koresSpareParts to it + _partArray)
                                            ]
                            				(text: $computerStats's Core3's Name)  slotted in successfully
                           					(rerun: ?bench)")
                        					]
                    					]
                                    ]
                            			(if: $computerStats's "Core3" is not "None"and it is "Empty")[
                    						(button:)[
                                            	(link:  "Empty Slot")[
                                            		(print: "
                            							(set:  $computerStats's Core3 to $koresSpareParts's $core1ID)
                            							(set: _partArray to (find: _part where _part's Name is $koresSpareParts's $core1ID's Name, ...$koresSpareParts))
                            							(set: $koresSpareParts to it - _partArray)
                            							(if: _partArray's length is >1)[
                            								(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            								(set: $koresSpareParts to it + _partArray)
                                                    	]
                            						(text: $computerStats's Core3's Name)  slotted in successfully
                           							(rerun: ?bench)"
                                                    )
                        						]
                    						]
                                        ]
                            				(if: $computerStats's "Core4" is not "None"and it is not "Empty")[
                                                (button:)[
                                                    (link: $computerStats's Core4's Name)[
                                                        (print: "
                                                        (set: $koresSpareParts to it + (a:$computerStats's Core4))
                                                        (set:  $computerStats's Core4 to $koresSpareParts's $core1ID)
                                                        (set: _partArray to (find: _part where _part's Name is $koresSpareParts's $core1ID's Name, ...$koresSpareParts))
                                                        (set: $koresSpareParts to it - _partArray)
                                                        (if: _partArray's length is >1)[
                                                            (set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                                                            (set: $koresSpareParts to it + _partArray)
                                                        ]
                                                        (text: $computerStats's Core4's Name)  slotted in successfully
                                                        (rerun: ?bench)")
                                                        ]
                                                    ]
                                            ]
                            
                            				(if: $computerStats's "Core4" is not "None"and it is "Empty")[
                    						(button:)[
                                            	(link:  "Empty Slot")[
                                            		(print: "
                            							(set:  $computerStats's Core4 to $koresSpareParts's $core1ID)
                            							(set: _partArray to (find: _part where _part's Name is $koresSpareParts's $core1ID's Name, ...$koresSpareParts))
                            							(set: $koresSpareParts to it - _partArray)
                            							(if: _partArray's length is >1)[
                            								(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            								(set: $koresSpareParts to it + _partArray)
                                                    	]
                            						(text: $computerStats's Core4's Name)  slotted in successfully
                           							(rerun: ?bench)"
                                                    )
                        						]
                    						]
                                        ]
                            
                            				(if: $computerStats's "Core5" is not "None"and it is not "Empty")[
                                                (button:)[
                                                    (link: $computerStats's Core5's Name)[
                                                        (print: "
                                                        (set: $koresSpareParts to it + (a:$computerStats's Core5))
                                                        (set:  $computerStats's Core5 to $koresSpareParts's $core1ID)
                                                        (set: _partArray to (find: _part where _part's Name is $koresSpareParts's $core1ID's Name, ...$koresSpareParts))
                                                        (set: $koresSpareParts to it - _partArray)
                                                        (if: _partArray's length is >1)[
                                                            (set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                                                            (set: $koresSpareParts to it + _partArray)
                                                        ]
                                                        (text: $computerStats's Core5's Name)  slotted in successfully
                                                        (rerun: ?bench)")
                                                        ]
                                                    ]
                                            ]
                            
                            		(if: $computerStats's "Core5" is not "None"and it is "Empty")[
                    						(button:)[
                                            	(link:  "Empty Slot")[
                                            		(print: "
                            							(set:  $computerStats's Core5 to $koresSpareParts's $core1ID)
                            							(set: _partArray to (find: _part where _part's Name is $koresSpareParts's $core1ID's Name, ...$koresSpareParts))
                            							(set: $koresSpareParts to it - _partArray)
                            							(if: _partArray's length is >1)[
                            								(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            								(set: $koresSpareParts to it + _partArray)
                                                    	]
                            						(text: $computerStats's Core5's Name)  slotted in successfully
                           							(rerun: ?bench)"
                                                    )
                        						]
                    						]
                                        ]
                            
                            			(if: $computerStats's "Core6" is not "None"and it is not "Empty")[
                                                (button:)[
                                                    (link: $computerStats's Core6's Name)[
                                                        (print: "
                                                        (set: $koresSpareParts to it + (a:$computerStats's Core6))
                                                        (set:  $computerStats's Core6 to $koresSpareParts's $core1ID)
                                                        (set: _partArray to (find: _part where _part's Name is $koresSpareParts's $core1ID's Name, ...$koresSpareParts))
                                                        (set: $koresSpareParts to it - _partArray)
                                                        (if: _partArray's length is >1)[
                                                            (set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                                                            (set: $koresSpareParts to it + _partArray)
                                                        ]
                                                        (text: $computerStats's Core6's Name)  slotted in successfully
                                                        (rerun: ?bench)")
                                                        ]
                                                    ]
                                            ]
                            
                            			(if: $computerStats's "Core6" is not "None"and it is "Empty")[
                    						(button:)[
                                            	(link:  "Empty Slot")[
                                            		(print: "
                            							(set:  $computerStats's Core6 to $koresSpareParts's $core1ID)
                            							(set: _partArray to (find: _part where _part's Name is $koresSpareParts's $core1ID's Name, ...$koresSpareParts))
                            							(set: $koresSpareParts to it - _partArray)
                            							(if: _partArray's length is >1)[
                            								(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            								(set: $koresSpareParts to it + _partArray)
                                                    	]
                            						(text: $computerStats's Core6's Name)  slotted in successfully
                           							(rerun: ?bench)"
                                                    )
                        						]
                    						]
                                        ]
                        			]
                    			]
                			]
        				]
                    
                        <br>
						(set: _arrayNumber to 0)
						=|===
						RAM:
						(for: each _item, ...$koresSpareParts)[
    						(set: _arrayNumber to it +1)
    						(if: _item's "Slot" is "RAM")[
        						(set: $RAM1ID to _arrayNumber)
    							(button:)[(link: _item's "Name")[
        							Swap into:
                					(if: $computerStats's "RAM Slot 1" is not "Empty")[
                    					(button:)[
                                        	(link:  $computerStats's "RAM Slot 1"'s "Name" )[
                        						(set: $koresSpareParts to it + (a:$computerStats's "RAM Slot 1"))
                            					(set: $computerStats's "RAM Slot 1" to $koresSpareParts's $RAM1ID)
                            					(set: _partArray to (find: _part where _part's Name is _item's Name, ...$koresSpareParts))
                            					(set: $koresSpareParts to it - _partArray)
                                                 (if: _partArray's length is >1)[
                            						(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            						(set: $koresSpareParts to it + _partArray)
                                                 ]
                                                 (print: (text:$computerStats's "RAM Slot 1"'s "Name") + " slotted in successfully.")
                            					(rerun:?bench)
                        					]
                                     	]
                        				(button:)[
                                        	(link: $computerStats's "RAM Slot 2"'s "Name")[
                        						(set: $koresSpareParts to it + (a:$computerStats's "RAM Slot 2"))
                           						(set: $computerStats's "RAM Slot 2" to $koresSpareParts's $RAM1ID)
                            					(set: _partArray to (find: _part where _part's Name is _item's Name, ...$koresSpareParts))
                            					(set: $koresSpareParts to it - _partArray)
                                                        (if: _partArray's length is >1)[
                            								(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            								(set: $koresSpareParts to it + _partArray)
                                                        ]
                                                        (print: (text:$computerStats's "RAM Slot 2"'s "Name") + " slotted in successfully.")
                            							(rerun:?bench)
                                                    ]
                                                ]
                            					(if: $computerStats's "RAM Slot 3" is not "None")[
                         							(button:)[
                                                    	(link: $computerStats's "RAM Slot 3"'s "Name")[
                        									(set: $koresSpareParts to it + (a:$computerStats's "RAM Slot 3"))
                            								(set: $computerStats's "RAM Slot 3" to $koresSpareParts's $RAM1ID)
                            								(set: _partArray to (find: _part where _part's Name is _item's Name, ...$koresSpareParts))
                           									(set: $koresSpareParts to it - _partArray)
                            								(if: _partArray's length is >1)[
                            									(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            									(set: $koresSpareParts to it + _partArray)]
                                                        	(print: (text:$computerStats's "RAM Slot 3"'s "Name") + " slotted in successfully.")
                            								(rerun:?bench)
                                                        ]
                                                    ]
                                                ]
                            					(if: $computerStats's "RAM Slot 4" is not "None")[
                        							(button:)[
                                                    	(link: $computerStats's "RAM Slot 4"'s "Name")[
                        								(set: $koresSpareParts to it + (a:$computerStats's "RAM Slot 4"))
                            							(set: $computerStats's "RAM Slot 4" to $koresSpareParts's $RAM1ID)
                            							(set: _partArray to (find: _part where _part's Name is _item's Name, ...$koresSpareParts))
                            							(set: $koresSpareParts to it - _partArray)
                            							(if: _partArray's length is >1)[
                            								(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            								(set: $koresSpareParts to it + _partArray)
                                                        ]
                                                        (print: (text:$computerStats's "RAM Slot 4"'s "Name") + " slotted in successfully.")
                            							(rerun:?bench)
                                                    ]
                                                ]
                                           ]
                            				(if: $computerStats's "RAM Slot 5" is not "None")[
                        					(button:)[
                                            	(link: $computerStats's "RAM Slot 5"'s "Name")[
                        							(set: $koresSpareParts to it + (a:$computerStats's "RAM Slot 5"))
                            						(set: $computerStats's "RAM Slot 5" to $koresSpareParts's $RAM1ID)
                            						(set: _partArray to (find: _part where _part's Name is _item's Name, ...$koresSpareParts))
                            						(set: $koresSpareParts to it - _partArray)
                                                        (if: _partArray's length is >1)[
                            								(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            								(set: $koresSpareParts to it + _partArray)
                                                        ]
                                                        (print: (text:$computerStats's "RAM Slot 5"'s "Name") + " slotted in successfully.")
                            							(rerun:?bench)
                                                    ]
                                                ]
                                            ]
                            				(if: $computerStats's "RAM Slot 6" is not "None")[
                        						(button:)[
                                                	(link: $computerStats's "RAM Slot 6"'s "Name")[
                        								(set: $koresSpareParts to it + (a:$computerStats's "RAM Slot 6"))
                            							(set: $computerStats's "RAM Slot 6" to $koresSpareParts's $RAM1ID)
                            							(set: _partArray to (find: _part where _part's Name is _item's Name, ...$koresSpareParts))
                            							(set: $koresSpareParts to it - _partArray)
                                                         (if: _partArray's length is >1)[
                            								(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            								(set: $koresSpareParts to it + _partArray)
                                                          ]
                                                        (print: (text:$computerStats's "RAM Slot 6"'s "Name") + " slotted in successfully.")
                            							(rerun:?bench)
                                                    ]
                                                 ]
                                             ]
                            				(if: $computerStats's "RAM Slot 7" is not "None")[
                        						(button:)[
                                                	(link: $computerStats's "RAM Slot 7"'s "Name")[
                        								(set: $koresSpareParts to it + (a:$computerStats's "RAM Slot 7"))
                            							(set: $computerStats's "RAM Slot 7" to $koresSpareParts's $RAM1ID)
                            							(set: _partArray to (find: _part where _part's Name is _item's Name, ...$koresSpareParts))
                            							(set: $koresSpareParts to it - _partArray)
                                                         (if: _partArray's length is >1)[
                            								(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            								(set: $koresSpareParts to it + _partArray)
                                                        ]
                                                        (print: (text:$computerStats's "RAM Slot 7"'s "Name") + " slotted in successfully.")
                            							(rerun:?bench)
                                                        ]
                                                    ]
                                                ]
                            					(if: $computerStats's "RAM Slot 8" is not "None")[
                        							(button:)[
                                                    	(link: $computerStats's "RAM Slot 8"'s "Name")[
                        									(set: $koresSpareParts to it + (a:$computerStats's "RAM Slot 8"))
                                                              (set: $computerStats's "RAM Slot 8" to $koresSpareParts's $RAM1ID)
                                                              (set: _partArray to (find: _part where _part's Name is _item's Name, ...$koresSpareParts))
                                                              (set: $koresSpareParts to it - _partArray)
                                                        	  (if: _partArray's length is >1)[
                                                                    (set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                                                                    (set: $koresSpareParts to it + _partArray)
                                                              ]
                                                        	  (print: (text:$computerStats's "RAM Slot 8"'s "Name") + " slotted in successfully.")
                            								(rerun:?bench)
                                                        ]
                                                    ]
                                              ]
										]
                    				]
                				]
        					]
                        ]
        				==|==
        
						(set: _arrayNumber to 0)
        				Motherboards:
        				(for: each _item, ...$koresSpareParts)[
    						(set: _arrayNumber to it + 1)
    						(if: _item's "Slot" is "Motherboard")[
        						(set: $mobo1ID to _arrayNumber)
    							(button:)[
                                	(link: _item's "Name")[
        								Swap into:
                						(if: $computerStats's "Motherboard" is not "Empty")[
                    						(button:)[
                                        		(link:  $computerStats's "Motherboard"'s "Name" )[
                        							(set: $koresSpareParts to it + (a:$computerStats's "Motherboard"))
                            						(set: $computerStats's "Motherboard" to $koresSpareParts's $mobo1ID)
                            						(set: _partArray to (find: _part where _part's Name is _item's Name, ...$koresSpareParts))
                            						(set: $koresSpareParts to it - _partArray)
                                             			 (if: _partArray's length is >1)[
                            						(set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                            						(set: $koresSpareParts to it + _partArray)
                                       	         ]
                                                (print: (text:$computerStats's "Motherboard"'s "Name") + " slotted in successfully.")
                                                (if: $computerStats's "Core3" is "None" and $computerStats's "Motherboard"'s "Core Slots"is >2)[
													(set: $computerStats's "Core3" to "Empty", $computerStats's "Core4" to "Empty")
												]
                                                (if: $computerStats's "RAM Slot 3" is "None" and $computerStats's "Motherboard"'s "RAM Slots" is > 2)[
													(set: $computerStats's "RAM Slot 3" to "Empty", $computerStats's "RAM Slot 4" to "Empty")
                                                ]
												(if: $computerStats's "Core5" is "None" and $computerStats's "Motherboard"'s "Core Slots"is >4)[
													(set: $computerStats's "Core5" to "Empty", $computerStats's "Core6" to "Empty")
												]
                                                (if: $computerStats's "Core3" is not "None" and $computerStats's "Motherboard"'s "Core Slots"is <3)[
													(set: $koresSpareParts to it + (a: $computerStats's "Core3", $computerStats's "Core4"))
													(set: $computerStats's "Core3" to "None", $computerStats's "Core4" to "None")
												] 
												(if: $computerStats's "Core5" is not "None" and $computerStats's "Motherboard"'s "Core Slots"is <5)[
													(set: $koresSpareParts to it + (a: $computerStats's "Core5", $computerStats's "Core6"))
													(set: $computerStats's "Core5" to "None", $computerStats's "Core6" to "None")
												] 
												(if: $koresSpareParts contains "Empty")[
                                                	(set: $koresSpareParts to it - (a:"Empty"))
                                                ]
                            					(rerun:?bench)
                        					]
                                        ]
        							]
                                ]
        					]
        				]
        			]
        			===|=
        			(set: _arrayNumber to 0)
        			Cooling Systems:
        			(for: each _item, ...$koresSpareParts)[
    					(set: _arrayNumber to it + 1)
    					(if: _item's "Slot" is "Cooler")[
        					(set: $cooler1ID to _arrayNumber)
    						(button:)[
                            	(link: _item's "Name")[
        							Swap into:
                					(if: $computerStats's "Cooling System" is not "Empty")[
                    					(button:)[
                                        	(link:  $computerStats's "Cooling System"'s "Name" )[
                                                (set: $koresSpareParts to it + (a:$computerStats's "Cooling System"))
                                                (set: $computerStats's "Cooling System" to $koresSpareParts's $cooler1ID)
                                                (set: _partArray to (find: _part where _part's Name is _item's Name, ...$koresSpareParts))
                                                (set: $koresSpareParts to it - _partArray)
                                                (if: _partArray's length is >1)[
                                                    (set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                                                    (set: $koresSpareParts to it + _partArray)
                                                  ]
                                                  		(print: (text:$computerStats's "Cooling System"'s "Name") + " slotted in successfully.")
                                                  	(rerun:?bench)
                        					]
                                        ]
        							]
                        		]
        					]
        				]
        			]
        			(set: _arrayNumber to 0)
                    
                    ====|
                    Network Cards:
                    
        			(for: each _item, ...$koresSpareParts)[
    					(set: _arrayNumber to it + 1)
    					(if: _item's "Slot" is "Network Card")[
        					(set: $NetworkCard1ID to _arrayNumber)
    						(button:)[
                            	(link: _item's "Name")[
        							Swap into:
                					(if: $computerStats's "Network Card" is not "Empty")[
                    					(button:)[
                                        	(link:  $computerStats's "Network Card"'s "Name" )[
                                                (set: $koresSpareParts to it + (a:$computerStats's "Network Card"))
                                                (set: $computerStats's "Network Card" to $koresSpareParts's $NetworkCard1ID)
                                                (set: _partArray to (find: _part where _part's Name is _item's Name, ...$koresSpareParts))
                                                (set: $koresSpareParts to it - _partArray)
                                                (if: _partArray's length is >1)[
                                                    (set: _partArray to (subarray: _partArray, 1, _partArray's length -1))
                                                    (set: $koresSpareParts to it + _partArray)
                                                  ]
                                                  		(print: (text:$computerStats's "Network Card"'s "Name") + " slotted in successfully.")
                                                  	(rerun:?bench)
                        					]
                                        ]
        							]
                        		]
        					]
        				]
        			]
        			(set: _arrayNumber to 0)
                    
        		]
			]
        ]

		}
	]
] 


:: Botnet {"position":"475,50","size":"100,100"}
<div>
(box: "X")+(b4r:"solid","double","double","solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)[(button:)+(box:"====X")+(color:red)[[[X->Computer]]]
(collapse:)[
Botnet:
You have $botnetCount machines under your control

Machines:
<br>
(for: each _machine, ...$botnet)[(print:_machine's "Name")<br>]

]]


:: Browser {"position":"725,525","size":"200,200"}
(collapse:)[
	(hook:"browser")[
    	(float-box:"X","Y")+(b4r:"solid","double","double","solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)+(css:"margin-top:0px,margin-bottom:0px")[
            (if:$hackSelection is not 0 and $hackableSites contains $hackSelection)[
				(align:"<==")+(box:"X=====")+(css:"margin-top: 0px; offset-position: top 100px;")[
        			(float-box: "=XXX======================", "=YY=================")+(css: "overflow:hidden; padding-top: 0.1px;")+(b4r:"solid","double","double","solid")+(b4r-color:(mix: 0.5, white, 0.5, #00f))+(bg:(mix: 0.5, white, 0.5, #00f))[
        				(hook: "hackButton")[
                        	(button:"X")+(css: ".enchantment-button:not(.link) tw-link {padding-top:0.1px; border:1px}")+(color:black)+(hover-style:(color:(mix: 0.5, white, 0.5, #00f))+(background:black))[
            					(link-goto:"Hack", $hackSelection)
        		]
        	]
        ]
    ]

    ]]
	(align:"==>")+(box:"=====X")+(css:"margin-top: 0px;offset-position: top 100px;")[
    	(collapse:)[(float-box: "======================XXX=", "=YY=================")+(css: "overflow:hidden; padding-top: 0.1px;")+(b4r:"solid","double","double","solid")+(b4r-color:(mix: 0.5, white, 0.5, #00f))+(bg:(mix: 0.5, white, 0.5, #00f))[
        	(hook: "exitButton")[(button:"X")+(css: ".enchantment-button:not(.link) tw-link {padding-top:0.1px; border:1px}")+(color:black)+(hover-style:(color:(mix: 0.5, white, 0.5, #00f))+(background:black))(link-goto:"X", "Computer")
        ]]
        ]]]
]

(float-box: "=XXX=","=YYY===========")+(css:"margin:0.1px; padding:0.1px;font-size:10px;")[(collapse:)[
=|=
(button:)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(color:black))[(link-rerun: "Bank")[(set: $hackSelection to "Bank Battle")
(set: $selection to "Bank")(rerun:?browser)]]
=|=
(button:)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(color:black))[
(link-rerun:"Darknet Shop")[(set: $selection to "Darknet Shop")(set: $hackSelection to 0)(rerun:?browser)]]
=|=
(button:)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(color:black))[
(link-rerun:"Pizza")[(set: $selection to "Mama Mia's")(set: $hackSelection to "Level 1")
(rerun:?browser)]]
=|=
(button:)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(color:black))[
(link-rerun:"News")[(set: $selection to "Un'taeko Daily News")(set: $hackSelection to "Newspaper Battle")
(rerun:?browser)]]
=|=
(button:)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(color:black))[
(link-rerun:"TEC")[(set: $selection to "TEC Studios")(set: $hackSelection to "TEC Studios Battle")
(rerun:?browser)]]
=|=
(button:)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(color:black))[
(link-rerun:"SecCo")[(set: $hackSelection to "SecCo Battle")
(set: $selection to "SecCo")(rerun:?browser)]]
=|=
(button:)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(color:black))[
(link-rerun:"C2")[(set: $selection to "Corporation 2")(set: $hackSelection to "C2 Battle")
(rerun:?browser)]]
=|=
(button:)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(color:black))[
(link-rerun:"C3")[(set: $selection to "Corporation 3")(set: $hackSelection to "C3 Battle")
(rerun:?browser)]]
=|=
(button:)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(color:black))[
(link-rerun:"C1")[(set: $selection to "Corporation 1")(set: $hackSelection to "C1 Battle")
(rerun:?browser)]]
=|=
(button:)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(color:black))
[[Hack a Stranger]] 
]]
(hook: "browser")[
(float-box:"=XXXXXXXXXXXX=","===YYYYYYYYYY=")+(b4r:"Solid","Double","Double","Solid")+(color:(mix: 0.5, white, 0.5, #00f))+(bg: #121212)[
(if: $selection is 0)[
	(display: "Browser Home")
]
(if: $selection is not 0)[
(display: $selection)
(set: $selection to 0)]

]]]
 


:: Browser Home {"position":"600,575","size":"100,100"}
<h1>
Turnip Browser
</h1>
Using the Turnip Browser makes your browsing on the net super safe!
No ads, and no trackers. The Turnip Browser connects you to a network of other users of the Turnip Browser, and passes your encrypted connection through their network to obfuscate your connection.
Included in your personal cracked version of Turnip Browser is a script to crack open the server of any site you visit using a suite of tools you've accumulated. Just watch out for any ICE they may be running!


:: C1 Battle {"position":"1125,1150","size":"100,100"}
(collapse:)[
(display:"C1 Boss")
(set:$enemyName to "C1 Server")
(set:$enemy to $C1)
(set:$winResult to (go-to:"C1 Won"))
(set: $enemyPC to $C1Server)
(set: $hackSelection to 0)
]
(display:"Battle")


:: C1 Boss {"position":"1125,1525","size":"100,100"}
(hook:"C1 Boss")[(set: $C1Attacks to (ds: $EnhancedICEPick, $poison, $bruteForce, $defrag))
(set: $C1 to (dm:"Name","C1 Runner","Max Health",400, "Health", 400, "Max ICE", 400, "ICE", 400, "Bandwidth", 4, "Attack",10, "Attacks", $C1Attacks,"Poisoned", false, "Glitched", false))

(set: $C1Server to (dm: "Name", "Corporation 1", "Motherboard", $specialMotherboard, "Core1", $emeraldCore, "Core2", $rubyCore, "Core3", $rubyCore, "Core4", $rubyCore, "Core5", $sapphireCore, "Core6", $sapphireCore, "RAM Slots", 8,"RAM Slot 1", $16GBRAM,"RAM Slot 2", $16GBRAM, "RAM Slot 3", $16GBRAM, "RAM Slot 4", $16GBRAM, "RAM Slot 5", $16GBRAM, "RAM Slot 6", $16GBRAM, "RAM Slot 7", $16GBRAM, "RAM Slot 8", $16GBRAM, "Cooling System", $advancedCooler, "Network Card", $advancedNetworkCard))]


:: C1 Won {"position":"1125,1400","size":"100,100"}
You found the documents detailing the experiments the government has been performing on Tren, his entire history and stuff.

Don't worry, this game is still in alpha, and this page and all others will be updated.

(set: $playerDataFragments to it + 4)
(set: $level7Complete to true)
(set:$playerMoney to $playerMoney+50000)
(set: $unsentEmails's 1st's "Sent" to true)
(set: $specialCooler's "Purchasable" to true)
(set:$botnet to it + (a:$c1Server))

[[Browser]]

[[Computer]] 


:: C2 Battle {"position":"875,1150","size":"100,100"}
(collapse:)[
(display:"C2 Boss")
(set:$enemyName to "C2 Server")
(set:$enemy to $C2)
(set:$winResult to (go-to:"C2 Won"))
(set: $enemyPC to $C2Server)
(set: $hackSelection to 0)
]
(display:"Battle")


:: C2 Boss {"position":"875,1525","size":"100,100"}
(hook:"C2 Boss")[(set: $C2Attacks to (ds: $ICEPick))
(set: $C2 to (dm:"C2 Runner", "Max Health",300, "Health", 300, "Max ICE", 300, "ICE", 300, "Bandwidth", 4, "Attack",10, "Attacks", $C2Attacks,"Poisoned", false, "Glitched", false))


(set: $C2Server to (dm: "Name", "Corporation 2","Motherboard", $advancedMotherboard, "Core1", $emeraldCore, "Core2", $rubyCore, "Core3", $rubyCore, "Core4", $rubyCore, "Core5", "None", "Core6", "None", "RAM Slots", 2,"RAM Slot 1", $16GBRAM,"RAM Slot 2", $16GBRAM, "RAM Slot 3", $16GBRAM, "RAM Slot 4", $16GBRAM, "RAM Slot 5", "None", "RAM Slot 6", "None", "RAM Slot 7", "None", "RAM Slot 8", "None", "Cooling System", $advancedCooler, "Network Card", $advancedNetworkCard))]


:: C2 Won {"position":"875,1400","size":"100,100"}
You discover an out of place txt document hidden in the system files of C2's server. It appears to be left by a boy named Tren calling for help from within a facility owned by Corporation 1, but the origins of how the note got here are unclear.

It seems the boy has had experiments performed on him. They're injecting him with a strange glowing substance and making him perform magic with triistone.
Is he an aelma? Or are they finding ways to make humans perform magic?


(set: $playerDataFragments to it + 4)
(set: $level5Complete to true)
(set:$playerMoney to $playerMoney+50000)
(set: $unsentEmails's 1st's "Sent" to true)
(set: $16GBRAM's "Purchasable" to true)
(set: $defrag's "Purchasable" to true)
(set:$botnet to it + (a:$C2Server))

[[Browser]]

[[Computer]] 


:: C2CasinoServer {"position":"125,1525","size":"100,100"}
(collapse:)[(set: $C2CasinoServer to (dm: "Name", "Gaming Systems Ltd", "Motherboard", $basicMotherboard, "Core1", $sapphireCore, "Core2", $sapphireCore, "Core3", "None", "Core4", "None", "Core5", "None", "Core6", "None", "RAM Slots", 2,"RAM Slot 1", $8GBRAM,"RAM Slot 2", $8GBRAM, "RAM Slot 3", "None", "RAM Slot 4", "None", "RAM Slot 5", "None", "RAM Slot 6", "None", "RAM Slot 7", "None", "RAM Slot 8", "None", "Cooling System", $basicCooler, "Network Card", $basicNetworkCard))]


:: C3 Battle {"position":"1000,1150","size":"100,100"}
(collapse:)[
(display:"C3 Boss")
(set:$enemyName to "C3 Server")
(set:$enemy to $C3)
(set:$winResult to (go-to:"C3 Won"))
(set: $enemyPC to $C3Server)
(set: $hackSelection to 0)
]
(display:"Battle")


:: C3 Boss {"position":"1000,1525","size":"100,100"}
(hook:"C3 Boss")[(set: $C3Attacks to (ds: $ICEPick))
(set: $C3 to (dm::"Name","C3 Runner","Max Health",350, "Health", 350, "Max ICE", 350, "ICE", 350, "Bandwidth", 4, "Attack",10, "Attacks", $C3Attacks,"Poisoned", false, "Glitched", false))


(set: $C3Server to (dm: "Name", "Corporation 3", "Motherboard", $advancedMotherboard, "Core1", $emeraldCore, "Core2", $rubyCore, "Core3", $rubyCore, "Core4", $rubyCore, "Core5", "None", "Core6", "None", "RAM Slots", 2,"RAM Slot 1", $16GBRAM,"RAM Slot 2", $16GBRAM, "RAM Slot 3", $16GBRAM, "RAM Slot 4", $16GBRAM, "RAM Slot 5", "None", "RAM Slot 6", "None", "RAM Slot 7", "None", "RAM Slot 8", "None", "Cooling System", $advancedCooler, "Network Card", $advancedNetworkCard))]


:: C3 Won {"position":"1000,1400","size":"100,100"}
You found the birth records of Dare and his parents, but Tren's are mysteriously missing

(set: $playerDataFragments to it + 4)
(set: $level6Complete to true)
(set:$playerMoney to $playerMoney+50000)
(set: $unsentEmails's 1st's "Sent" to true)
(set: $specialMotherboard's "Purchasable" to true)
(set:$botnet to it + (a:$C3Server))

[[Browser]]

[[Computer]] 


:: Computer {"position":"1100,50","size":"200,200"}
{
(for:each _emails, ...$unsentEmails)[
	(if: _emails's Sent is true)[
		(set: $koreEmails to it + (a:_emails))
        (set: $unsentEmails to it - (a:_emails))
	]
]

(set: $emailNotif to 0)
(for: each _emails, ...$koreEmails)[
	(if: _emails's "Read" is false)[
		(set: $emailNotif to it +1)
       ]
]


}(float-box: "X","Y")+(bg: (gradient:135, .75, black,  .25, (rgb:93, 63, 211))) +(b4r:"solid","double","double","solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)
[
<br>
<br>
<br>
=|=
(button:)+(bg:black)+(color:(mix: 0.6, white, 0.4, #00f))+(hover-style: (bg:(mix: 0.5, white, 0.5, #00f))+(text-color:black))
[[Documents]]



(button:)+(bg:black)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(text-color:black))
[[Pictures]]

=|=
(button:)+(bg:black)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(text-color:black))
[[Downloads]]

(if:$emailNotif >0)[
(button:)+(bg:black)+(color:#FF69B4)+(hover-style:(background:#FF69B4)+(text-color:black))
[[Mail ($emailNotif) ->Email]]
](else:)[
(button:)+(bg:black)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(text-color:black))
[[Mail ->Email]]
]
=|=
(button:)+(bg:black)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(text-color:black))
[[Music]]



(button:)+(bg:black)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(text-color:black))
[[Browser]]

=|=
(button:)+(bg:black)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(text-color:black))
[[Botnet]]



(button:)+(bg:black)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(text-color:black))
[[IDE]]

=|=
(button:)+(bg:black)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(text-color:black))
[[Trash]]



(button:)+(bg:black)+(color:(mix: 0.5, white, 0.5, #00f))+(hover-style:(background:(mix: 0.5, white, 0.5, #00f))+(text-color:black))
[[Turn off Computer->Home]]
|==|
]


:: Computer Parts {"position":"1650,75","size":"100,100"}
(collapse:)[
(set: $rubyCore to (dm: "Name", "Ruby Core", "Element","Fire", "Purchasable", true, "Price", 10000, "Description", "A red gem inscribed with draconic runes. Contains the element of fire.", "Slot", "Core"))
(set: $sapphireCore to (dm: "Name", "Sapphire Core", "Element","Water", "Purchasable", true, "Price", 10000, "Description", "A blue gem inscribed with draconic runes. Contains the element of water.", "Slot", "Core"))
(set: $emeraldCore to (dm: "Name", "Emerald Core", "Element","Air", "Purchasable", true, "Price", 10000, "Description", "A green gem inscribed with draconic runes. Contains the element of air.", "Slot", "Core"))
(set: $obsidianCore to (dm: "Name", "Obsidian Core", "Element","Aether", "Purchasable", false, "Price", 25000, "Description", "A red gem inscribed with draconic runes. Contains the element of aether.", "Slot", "Core"))
(set: $diamondCore to (dm: "Name",  "Diamond Core", "Element","Light", "Purchasable", false, "Price", 25000, "Description", "A red gem inscribed with draconic runes. Contains the element of light.", "Slot", "Core"))

(set: $8GBRAM to  (dm: "Name", "8GB RAM Stick", "Price", 8000, "RAM", 8, "Description", "An 8GB RAM Stick", "Purchasable", true, "Slot", "RAM"))
(set: $16GBRAM to (dm: "Name", "16GB RAM Stick", "Price", 16000, "RAM", 16, "Description", "A 16GB RAM Stick", "Purchasable", true, "Slot", "RAM"))
(set: $32GBRAM to (dm: "Name", "32GB RAM Stick","Price", 32000, "RAM", 32, "Description", "A 32GB RAM Stick", "Purchasable", false, "Slot", "RAM"))

(set: $basicCooler to (dm: "Name","Basic Cooling System", "Price", 10000, "Cooling", 10, "Description", "A basic cooling system for your machine's cores.", "Purchasable", true, "Slot", "Cooler"))
(set: $advancedCooler to (dm: "Name","Advanced Cooling System", "Price", 50000, "Cooling", 50, "Description", "An advanced cooling system for your machine's cores.", "Purchasable", true, "Slot", "Cooler"))
(set: $specialCooler to (dm: "Name", "Custom Cooling System", "Price", 75000, "Cooling", 75, "Description", "A custom cooling solution for your personal machine's cores.", "Purchasable", false, "Slot", "Cooler"))

(set: $basicMotherboard to (dm: "Name", "Basic Motherboard", "Core Slots", 2, "RAM Slots", 2, "Price", 1000, "Description", "A basic motherboard for a starter build. Can slot 2 cores and 2 RAM sticks.", "Purchasable", true, "Slot", "Motherboard")) 
(set: $advancedMotherboard to (dm: "Name", "Advanced Motherboard", "Core Slots", 4, "RAM Slots", 4, "Price", 3000, "Description", "An advanced motherboard for a more powerful build. Can slot 4 cores and 4 RAM sticks.", "Purchasable", true, "Slot", "Motherboard"))
(set: $specialMotherboard to (dm: "Name", "Special Motherboard", "Core Slots", 6, "RAM Slots", 8, "Price", 8000, "Description", "A special motherboard for a top of the line build. Can slot 6 cores and 8 RAM sticks.", "Purchasable", false, "Slot", "Motherboard"))
(set: $allMotherboards to (a:$basicMotherboard, $advancedMotherboard, $specialMotherboard))


(set: $basicNetworkCard to (dm: "Name", "Basic Network Card", "Connection Slots", 2,  "Price", 2000, "Description", "A basic network card for connecting to the internet. Enables private connection with 2 devices at once.", "Purchasable", true, "Slot", "Network Card")) 
(set: $advancedNetworkCard to (dm: "Name", "Advanced Network Card", "Connection Slots", 10,  "Price", 8000, "Description", "An advanced network card for connecting to the internet. Enables private connection with 4 devices at once.", "Purchasable", true, "Slot", "Network Card"))
(set: $specialNetworkCard to (dm: "Name", "Special Network Card", "Connection Slots", 100, "Price", 12000, "Description", "A special network card for connecting to the internet. Enables private connection with 6 devices at once..", "Purchasable", false, "Slot", "Network Card"))
(set: $allNetworkCards to (a:$basicNetworkCard, $advancedNetworkCard, $specialNetworkCard))
]



:: Computer Shop {"position":"1800,75","size":"100,100"}
(collapse:)[
    (hook: "computerShop")[
(float-box:"=======X=", "=YY=========")+(css: "overflow:hidden;")[(button:)[[Home->Home]]]

(float-box:"=======X=", "====YY=========")+(css: " overflow:hidden;")[(button:)[(link-show:"?", ?guide)]]

(hidden: )|pcShopConfirmation>[(float-box: "=X=","==Y==")[
    (set: _count to 0)
	(for: each _item, ...$allParts)[
    	(set: _count to it +1)
    	(if:$selected  is _item's Name)[
        	(set: $koresSpareParts to it + (a:$allParts's _count))
            $selected added to your spare parts.
            (rerun: ?computerShop)
            ]
    ]
]]

(hidden:)|guide>[
	(float-box:"==XXXXXXXXXXXXXXX==","===YYYYYYYYYYY==")+(css: "z-index: 2;")+(bg:black)[
    (float-box:"============X===", "===YY==========")+(css: "overflow:hidden;")+(bg:transparent)[(button:)[(link:"X")[(hide:?guide)(rerun:?computerShop)]]]
    
    Welcome to Brik's PC Emporium!
    We have everything you need to upgrade your PC or build a new one!
    
    <h2>Cores</h2>
    
    Cores are essential for your machine to do anything. They're essentially the brain of your machine. You process any programs you run through the cores, and they output your data. If the type of program you're running resonates with the particular core you've chosen to use in your machine, it will operate more efficiently and perform beyond your expectations.
    
    <h2>Core Cooling</h2>
    Upgrading your systems cooling will allow for higher performance in your system.
    Operating your machine at maximum performance for long periods causes it to heat up, and as it heats up it loses efficiency. Keep it cool with an upgraded cooler, and you might even gain some performance.
    
    <h2>RAM</h2>
    
    RAM is your machine's short term memory. The more you have, the more your machine remembers and the faster your machine can run operations that require large amounts of memory, as it's not having to relearn everything as it's dumping out it's oldest memories to make room for new ones.
    
    <h2>Motherboard</h2>
    
    The motherboard is the body of the computer. Everything else plugs into the motherboard. Upgrading your motherboard provides additional slots to plug things into.
    
    <h2>Network Card</h2>
    
    The network card is the telepathic center of the brain of the machine. Okay I'm kinda running out of ways to compare a computer to a body, but basically the network card is how your machine connects to the internet.
    An upgraded network card increases your download and upload speeds, and provides additional ports to connect with peers in a p2p network.
    
	]

]

		<h3>Processor Cores</h3>
	</div>
(for: each _core, ...$allCores)[

(if:_core's "Purchasable" is true)[
(print:_core's "Name")
==||=
(size:.75)+(color:red)[Buy it Now for: ](print: _core's "Price")^^CR^^
(print:_core's "Description")


(collapse:)[
(button:)[(link-replace:"Buy it Now")[

	(if:$playerMoney > _core's "Price")[
    
	(print: "(link: 'Purchase " + (text: _core's Name) + "" + '?' + "')[(set: $selected to " +"'" + (text: _core's Name) + "'" + ")
(display: " + "'Purchase Confirmation'" + ")(show: ?pcShopConfirmation)]")
]

(else:)[Insufficient Funds]
]]]
]]
<h3>Core Cooling</h3>
(for: each _core, ...$allCoolers)[

(if:_core's "Purchasable" is true)[
(print:_core's "Name")
==||=
(size:.75)+(color:red)[Buy it Now for: ](print: _core's "Price")^^CR^^
Description: (print:_core's "Description")


(collapse:)[
(button:)[(link-replace:"Buy it Now")[

	(if:$playerMoney > _core's "Price")[
    
	(print: "(link: 'Purchase " + (text: _core's Name) + "" + '?' + "')[(set: $selected to " +"'" + (text: _core's Name) + "'" + ")
(display: " + "'Purchase Confirmation'" + ")(show: ?pcShopConfirmation)]")
]

(else:)[Insufficient Funds]
]]]]
]]
</div>
|==|

<h2>RAM</h2>
(for: each _core, ...$allRAM)[

(if:_core's "Purchasable" is true)[
(print:_core's "Name")
==||=
(size:.75)+(color:red)[Buy it Now for: ](print: _core's "Price")^^CR^^
Description: (print:_core's "Description")


(collapse:)[
(button:)[(link-replace:"Buy it Now")[

	(if:$playerMoney > _core's "Price")[
    
	(print: "(link: 'Purchase " + (text: _core's Name) + "" + '?' + "')[(set: $selected to " +"'" + (text: _core's Name) + "'" + ")
(display: " + "'Purchase Confirmation'" + ")(show: ?pcShopConfirmation)]")
]

(else:)[Insufficient Funds]
]]]
]] 

|==|
<h2>Motherboards</h2>
(for: each _core, ...$allMotherboards)[

(if:_core's "Purchasable" is true)[
(print:_core's "Name")
==||=
(size:.75)+(color:red)[Buy it Now for: ](print: _core's "Price")^^CR^^
Description: (print:_core's "Description")


(collapse:)[
(button:)[(link-replace:"Buy it Now")[

	(if:$playerMoney > _core's "Price")[
    
	(print: "(link: 'Purchase " + (text: _core's Name) + "" + '?' + "')[(set: $selected to " +"'" + (text: _core's Name) + "'" + ")
(display: " + "'Purchase Confirmation'" + ")(show: ?pcShopConfirmation)]")
]

(else:)[Insufficient Funds]
]]]
]]]
|==|
<h2>Network Cards</h2>
(for: each _core, ...$allNetworkCards)[

(if:_core's "Purchasable" is true)[
(print:_core's "Name")
==||=
(size:.75)+(color:red)[Buy it Now for: ](print: _core's "Price")^^CR^^
Description: (print:_core's "Description")


(collapse:)[
(button:)[(link-replace:"Buy it Now")[

	(if:$playerMoney > _core's "Price")[
    
	(print: "(link: 'Purchase " + (text: _core's Name) + "" + '?' + "')[(set: $selected to " +"'" + (text: _core's Name) + "'" + ")
(display: " + "'Purchase Confirmation'" + ")(show: ?pcShopConfirmation)]")
]

(else:)[Insufficient Funds]
]]]
]]


:: Corporation 1 {"position":"1125,750","size":"100,100"}
<h2>Welcome to the Corporation 1 Intranet</h2>

Here you can access your records as a citizen of Bae'el, register a vehicle, update your drivers license, or request a travel permit.

Login to get started.

(set: $hackSelection to "Hack C1")



:: Corporation 2 {"position":"875,750","size":"100,100"}
<h2>Welcome to the Corporation 2 Intranet</h2>

Here you can access your records as a citizen of Un'taeko, register a vehicle, update your drivers license, or request a travel permit.

Login to get started.

(set: $hackSelection to "Hack C2")



:: Corporation 3 {"position":"1000,750","size":"100,100"}
<h2>Welcome to the Corporation 3 Intranet</h2>

Here you can access your records as a citizen of Jorto, register a vehicle, update your drivers license, or request a travel permit.

Login to get started.

(set: $hackSelection to "Hack C3")



:: Darknet Shop {"position":"275,450","size":"100,100"}
{
<h2>Zero Day Market</h2>
<br>
<h4>Exploits, Viruses, and more</h4>
<br>
(for: each _program, ...$purchasablePrograms)[
(if: $downloads does not contain _program)[
<h3>(print:_program's "Name")</h3>
==||=
(color:red)[(print: _program's "Price")^^CR^^]
(print:_program's "Description")


(collapse:)[
(button:)[(link-replace:"Buy it Now")[

	(if:$playerMoney > _program's "Price")[
    
	(print: "(link: 'Purchase " + (text: _program's Name) + "" + '?' + "')[(set: $selected to " +"'" + (text: _program's Name) + "'" + ")
(display: " + "'Purchase Confirmation'" + ")(show: ?purchaseConfirmation)]")
	(if: _program is $EnhancedICEPick)[
     	(set: $hackableSites to it + (a: "Newspaper Battle", "TEC Studios Battle", "SecCo Battle", "C2 Battle", "C3 Battle", "C1 Battle"))
    ]
]
<br>
(else:)[Insufficient Funds]
]]
<br>
]
]]

}










:: Debug {"position":"750,75","size":"100,100"}
(button:"X==")[(link:"All Programs")[(set:_downloads to $allPrograms)]]
(button:"X==")[(link:"Infinite Money")[(set:$playerMoney to 99999999)]]

(button:)[["Home"->Home]]


:: Detect Vulnerabilities {"position":"100,600","size":"100,100"}
Checking for vulnerabilities...
.
.
Running byteToken...
.
.
byteToken couldn't find a vulnerability.
Running ShawntiTracer...
.
.
ShawntiTracer found $ulnerabilities vulnerability


:: Documents {"position":"1550,550","size":"100,100"}
(float-box:"X","Y")+(b4r:"solid","double","double","solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)+(css:"margin-top:0px,margin-bottom:0px")[
	(align:"==>")+(box:"=====X")+(css:"margin-top: 0px;offset-position: top 100px;")[
    	(collapse:)[(float-box: "========X", "Y===========")+(css: "overflow:hidden")+(b4r:"solid","double","double","solid")+(b4r-color:(mix: 0.5, white, 0.5, #00f))+(bg:(mix: 0.5, white, 0.5, #00f))[
        	(button:"X")+(css: "border:1px")+(color:black)+(hover-style: (color:white))(link-goto:"X", "Computer")
        ]
        ]]
(button:)[
[[Employment]]]

]]


:: Downloads {"position":"1925,925","size":"100,100"}
(float-box:"X","Y")+(b4r:"solid","double","double","solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)+(css:"margin-top:0px,margin-bottom:0px")[
	(align:"==>")+(box:"=====X")+(css:"margin-top: 0px;offset-position: top 100px;")[
    	(collapse:)[(float-box: "========X", "Y===========")+(css: "overflow:hidden")+(b4r:"solid","double","double","solid")+(b4r-color:(mix: 0.5, white, 0.5, #00f))+(bg:(mix: 0.5, white, 0.5, #00f))[
        	(button:"X")+(css: "border:1px")+(color:black)+(hover-style: (color:white))(link-goto:"X", "Computer")
        ]
        ]]
<!-- Purchased soft should be available to browse here-->
<h3>Downloads:</h3>
(for:each _download, ...$downloads)[(print:_download's "Name")
]

]


:: Email {"position":"1100,300","size":"100,100"}
{(hook:"emailHook")[
	(css: "z-index: 1")+(float-box: "X","Y")+(css:"padding:100px; margin-top:0.1px;")+(b4r:"solid","double","double","solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)[
(float-box: "========X", "Y===========")+(css: "overflow:hidden; padding:0.1px;")+(b4r:"solid","double","double","solid")+(b4r-color:(mix: 0.5, white, 0.5, #00f))+(bg:(mix: 0.5, white, 0.5, #00f))[(button:"X")+(css: "border:1px")+(color:black)+(hover-style: (color:white))[[[[X->Computer]]]]]
<!-- New emails to appear during course of game from other SCOUTS members-->
<br>
<br>
<br>
<br>
		(box:"X=")+(b4r: "solid", "double", "double", "solid") + (b4r-color:(mix: 0.5, white, 0.5, #00f))+(css: "padding:0px; margin:0px; height:75px; overflow:hidden")[
=|=
			(box:"X=")+(css: "padding:0.1px; margin:0px;")[From]
=|=
			(box:"=X")+(css: "padding:0.1px; overflow:hidden")[Subject]
		]
	(for:each _email, ...$koreEmails)[
    	(box:"X=")+(b4r: "solid", "double", "double", "solid") + (b4r-color:(mix: 0.5, white, 0.5, #00f))[
	    	(box:"=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX=")+(css: "padding:0.1px; margin:0.1px; height:175px;width:250%; overflow:hidden")[(print: "(button:)[(css: " + '"height: 50px; padding:20px; margin: 0.1px") + ' + "(link-rerun: '" +
            "
            ||==
            " +(text: _email's Sender)+ "
            =||=
            " + '(align: "=><=")[|]' +" 
            ==||||
            "+(text: _email's Subject)+ "')[(set: $selected to " +"'" + (text: _email's Subject) + "'" + ")" +"(display: "+ '"selectedEmail")(show: ?emailWindow)]]')
        ]
	]
]


(set: $emailNotif to 0)
 ]

]
}






:: Email Passage [startup] {"position":"1225,300","size":"100,100"}
	(collapse:)[        
        <!-- Day 1 -->
        (set: $blankEmail to (dm:"Sender","", "Receiver","","Subject","","Body","","Sent",false, "Read", false))
        
        (set: $ITEmail to (dm:"Sender","Demaunt@corp2.corp", "Receiver","pikore.raeen@corp2.corp","Subject","Home Email Access","Body","Pikore,

Our server records indicate you're having your emails forwarded to a server off site. As I'm sure you know, its against Corporate policy to access company email from personal computers for security reasons. Please remove any email forwarding as soon as possible, or I'll be forced to notify your supervisor.

Thank you

Demaunt
IT","Sent",true, "Read",false))

(set: $mysteriousEmail to (dm: "Sender", "Unknown", "Receiver", "NUKE@SCOUTS.group", "Subject", "(None)", "Body", "You will pay.", "Sent", false, "Read", false))

        (set: $PTOEmail to (dm:"Sender","Bron.Frulk@corp2.corp", "Receiver","Pikore.Raeen@corp2.corp","Subject","PTO","Body","If you need any more time off, let me know. You do have 2 days PTO, and it doesn't roll over so I understand if you want to use it. We appreciate all your hard work these past 2 years, and we would hate to see such talent wasted at Corporation 3 or 1.  
By the way, I heard IT is giving you a hard time about getting these emails at home. We have discussed working from home before, but that's not available yet to unsalaried employees. It's a security issue. So turn it off.

Have a nice rest of your day,

Bron Frulk
Supervisor","Sent",false, "Read", false))


(set: $enhancedICEPickEmail to (dm: "Sender", "GUNS@SCOUTS.group", "Receiver", "NUKE@SCOUTS.group", "Subject", "ICEBREAKER", "Body", "NUKE
GOT A NEW ICEBREAKER IN THE SHOP
CHECK IT OUT >:)
GUNS", "Sent", false, "Read", false))

       
		(set:$koreEmails to (a:$ITEmail))
        (set: $unsentEmails to (a: $enhancedICEPickEmail, $PTOEmail, $mysteriousEmail))

]


:: Employment {"position":"1550,700","size":"100,100"}
(float-box:"X","Y")+(b4r:"solid","double","double","solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)+(css:"margin-top:0px,margin-bottom:0px")[
	(align:"==>")+(box:"=====X")+(css:"margin-top: 0px;offset-position: top 100px;")[
    	(collapse:)[(float-box: "========X", "Y===========")+(css: "overflow:hidden")+(b4r:"solid","double","double","solid")+(b4r-color:(mix: 0.5, white, 0.5, #00f))+(bg:(mix: 0.5, white, 0.5, #00f))[
        	(button:"X")+(css: "border:1px")+(color:black)+(hover-style: (color:white))(link-goto:"X", "Computer")
        ]
        ]]

[[Resume]]

[[Documents]]
]


:: Enemy Status Effects {"position":"1700,1175","size":"100,100"}
(collapse:)[(if: $enemy's "Poisoned" is true)[
	(set:$poisonDamage to (random:5,20))
	(if: $allKoresCores contains $emeraldCore)[
		(set: $poisonDamage to it*1.5)
    ]
(set:$enemyHealth to it - $poisonDamage)
$enemyName's machine is infected with Outbreak.dll
$enemyName takes $poisonDamage from Outbreak.dll
]
]


:: Enemy Turn {"position":"1800,1175","size":"100,100"}
(hook:"enemyTurn")[(collapse:)[


<!-- Poison Check -->
	(if: $enemy's "Poisoned" is true)[
    	(display: "Enemy Status Effects")
        (if: $enemyHealth is < 1)[
        	(set: $outbreakActive to false)
        	$winResult
        ]
    ]

<!-- Enemy Attacks -->
(set: $enemyAttacks to $enemy's "Attacks")
(set:$enemyAttack to (either: ...$enemyAttacks))
(set:$enemyAttackName to "Name" of $enemyAttack)

(if:$playerICE <1)[
(set:$damage to "Damage" of $enemyAttack)
(if: (random:1,20) >19)[
	(set: $damage to it*2)
]
(set:$playerHealth to it - $damage)]
(else:)[
	(set: $damage to "Damage" of $enemyAttack/10)
]
(if: $enemyAttack's Glitchery is true)[
	(set: $playerStat's Glitched to true)
]

(else-if: $enemyAttack's Poison is true)[
	(set: $playerStat's Poisoned to true)
    Your computer has been infected by your opponent's (print:$enemyAttack's "Name")!
]
                <!-- Heal -->
                (if:$enemyAttack's "Heal" is > 0)[
                    (set:$healing to$enemyAttack's "Heal"/2)
                    (if: $allEnemyCores contains $sapphireCore)[
                        (set: $healing to it*2)
                    ]
                	(set:$enemyrHealth to it + $healing)
                    $enemyName restored $healing system health.
                    (if: $enemyHealth > $enemyMaxHealth)[
                    	(set: $enemyHealth to $enemyMaxHealth)
                     ]
                	(set:$healCheck to true)
                ] 

                <!-- ICE Healing -->
                (if:$enemyAttack's "ICE Heal" is >0)[
                (set:$ICEHealing to $enemyAttack's "ICE Heal")
                    (if: $allEnemyCores contains $sapphireCore)[
                        (set: $ICEHealing to it*2)
                    ]
                (set:$enemyICE to it + $ICEHealing)
                (set:$ICEHealCheck to true)
                $enemyName restored $ICEHealing integrity to it's Intrusion Countermeasure Electronics.
                ]

(else:)[
(set:$damage to "Damage" of $enemyAttack)
(set:$ICEDamage to $enemyAttack's "ICE Damage" + $enemyAttack's "Damage" + (random: 1,10))
(set:$playerHealth to it - $damage)
(set:$playerICE to it - $ICEDamage)
$enemyName used $enemyAttackName, dealing $damage damage!

(if:$ICEDamage is > 0)[
$enemyAttackName dealt $ICEDamage damage to your ICE!
]]
(collapse:)[
<!-- Check if Player Dead -->
(if:$playerHealth is < 1)[
(link-go-to:"Game Over")]

<!-- Player's Turn -->
(else:)[
(set: $damageCheck to false)
(set: $ICEDamageCheck to false)
(set: $healCheck to false)
(set: $ICEHealCheck to false)
(button:)[
(link:"Next")[
(set:$log to "you")
(rerun:?Battle)]
]]]]]


:: Exit {"position":"600,425","size":"100,100"}
There is no escape 

[[Legends of Trii'el Kore]]


:: Free Pizza for Life {"position":"375,1400","size":"100,100"}
<div>
(box: "X")+(b4r:"solid","double","double","solid")+(b4r-colour:cyan)+(b4r-size: 20,20,30,30)[
You've ordered a free pizza! Expect your prize in 30 minutes or less.

{
(set: $playerDataFragments to it + 4)
(set: $level1Complete to true)
(set:$playerMoney to $playerMoney+5000)
(set: $unsentEmails's 1st's "Sent" to true)
(set:$allPrograms to it - (a:$EnhancedICEPick))
(set: $EnhancedICEPick's "Purchasable" to true)
(set:$allPrograms to it + (a:$EnhancedICEPick))
(set: $purchasablePrograms to it + (a:$EnhancedICEPick))
(set:$botnet to it + (a:$MamaMiaServer))
}
(button:)[
[[Desktop ->Computer]] ]
]
</div>


:: Game Over {"position":"1925,1175","size":"100,100"}
(box:"X")+(color:red)[
<h1>
(hook: "gameOverText")[
(set: $typewriterText to "Game Over.")
{
  <!-- Create a variable to track the position within the $typewriterText string -->
  (set: $typewriterPos to 1)

  <!-- Create a hook to hold the typed text -->
  |typewriterOutput>[]

  <!-- Set a delay of 10ms seconds per loop -->
  (live: 50ms)[

    <!-- Add the next character to the hook -->
    (append: ?typewriterOutput)[(print: $typewriterText's $typewriterPos)]

    <!-- Update the position -->
    (set: $typewriterPos to it + 1)

    <!-- If it's gone past the end, stop -->
    (if: $typewriterPos is $typewriterText's length + 1)[
      (stop:)
    ]
  ]
}

]</h1>

(set: $SecCoGameOverText to "Remain at your location. SecCo officers are on their way.")
{
  <!-- Create a variable to track the position within the $typewriterText string -->
  (set: $SecCoGameOverTextPos to 1)

  <!-- Create a hook to hold the typed text -->
  |SecCoGameOverTextPosOutput>[]

  <!-- Set a delay of 10ms seconds per loop -->
  (live: 10ms)[

    <!-- Add the next character to the hook -->
    (append: ?SecCoGameOverTextPosOutput)[(print: $SecCoGameOverText's $SecCoGameOverTextPos)]

    <!-- Update the position -->
    (set: $SecCoGameOverTextPos to it + 1)

    <!-- If it's gone past the end, stop -->
    (if: $SecCoGameOverTextPos is $SecCoGameOverText's length + 1)[
      (stop:)
    ]
  ]
}

(live:2s)[
(button:)[(link:"Save game?")[
  (if:(save-game:"Slot A"))[
	(if: (saved-games:) contains "Slot A")[
  	
Saved to Slot A!
(set: $playerHealth to $playerMaxHealth)
(set: $playerICE to $playerMaxICE)
]]]]
(button:)[(link-goto:"Main Menu","Legends of Trii'el Kore")[(set: $playerHealth to $playerMaxHealth)]
(set: $playerICE to $playerMaxICE)]]]


:: Graduation Photos {"position":"1350,175","size":"100,100"}
There are photos from Kore's graduation.

[[Pictures]]


:: Hack Button {"position":"1700,925","size":"100,100"}
(collapse:)[    			(button:)[
					(link:"Name" of _download)[
            			(set: $usedRAM to it +8)
                		(if: $availableRAM >= 8)[
						(set:$damage to _download's "Damage")
            			(if: $allKoresCores contains $rubyCore)[
                			(set: $allRubyCores to (find: $_rubies where _rubies is $rubyCore ...$allKoresCores)'s length)
            				(set: $damage to it*$allRubyCores*4.25+it)]
                		(set: _criticalCheck to (random: 1,20))
               			 (if: _criticalCheck is 20)[
                			(set: $damage to it*2)
                		]
               		 	(if: $enemyICE <1)[
                			(set: $damage to it*$allRubyCores+it*15)
                    	]
                        (if: $enemyICE >0)[
                        	(set: $damage to it*0+_download's "Damage"/10)
                            ]
						(set:$ICEDamage to _download's "ICE Damage")
            			(if: $allKoresCores contains $diamondCore)[
            				(set: $ICEDamage to it*1.25)
                    	]
                (if: (random: 1,20) is 20)[
                	(set: $ICEDamage to it * 2)
                ]
                <!-- Poison -->
                (if: _download's "Poison" is true)[
                    (set: _poisonCheck to (random: 1,4))
                    (if: _poisonCheck is 4)[
                        (set: $enemy's "Poisoned" to true)
                    ]
                    (if: _poisonCheck is 3 and $allKoresCores contains $obsidianCore)[
                    	(set: $enemy's "Poisoned" to true)
                    ]
                ]
                <!-- Heal -->
                (if:_download's "Heal" is > 0)[
                    (set:$healing to _download's "Heal"/2)
                    (if: $allKoresCores contains $sapphireCore)[
                        (set: $healing to it*2)
                    ]
                	(set:$playerHealth to it + $healing)
                    (if: $playerHealth > $playerMaxHealth)[
                    	(set: $playerHealth to $playerMaxHealth)
                     ]
                	(set:$healCheck to true)
                ] 

                <!-- ICE Healing -->
                (if:_download's "ICE Heal" is >0)[
                (set:$ICEHealing to _download's "ICE Heal")
                    (if: $allKoresCores contains $sapphireCore)[
                        (set: $ICEHealing to it*2)
                    ]
                (set:$playerICE to it + $ICEHealing)
                (set:$ICEHealCheck to true)
                ]

                <!-- ICE Damage-->
                (if: _download's "ICE Damage" is > 0)[(set:$ICEDamageChecker to true)]
                (if:"Poison" of _download is true)[(set:$enemy's "Poisoned" to true)
                (set: $outbreakActive to true)
                You've successfully installed Outbreak.dll on $enemyName's computer]
                (set:$enemyHealth to it - $damage)
                (if:$enemyICE >0)[
                    (set:$enemyICE to it - $ICEDamage)]
                (if:$healCheck is true)[
                    (print:"Name" of _download+"heals you for " + $healing + "points.")]
                    (if:$ICEHealCheck is true)[
                       (print:"Name" of _download +" repairs your ICE by " + $ICEHealing + "points.")]
                (if:$damage >0)[(print:"Name" of _download) deals $damage damage to $enemyName's machine.]
                (if:$ICEDamageChecker is true)[$enemyName's ICE lost $ICEDamage integrity.]
                (set: $damageCheck to false)
				(set: $ICEDamageCheck to false)
				(set: $healCheck to false)
				(set: $ICEHealCheck to false)
                (set:$log to "enemy")
            	(rerun:?Battle)

                        (if:$enemyHealth <1)[
                        (set: $outbreakActive to false)
                        $winResult]
                        
                    ]
                    (else:)[(set: _ramless to true)]
               ]
        ]]


:: Hack C1 {"position":"1125,875","size":"100,100"}
<!-- Set the text to show -->
(set: $typewriterText to "initializing...

ICEBREAKER 2.2.25.111f

Ready!

What would you like to do?
")

{
  <!-- Create a variable to track the position within the $typewriterText string -->
  (set: $typewriterPos to 1)

  <!-- Create a hook to hold the typed text -->
  |typewriterOutput>[]

  <!-- Set a delay of 20ms seconds per loop -->
  (live: 20ms)[

    <!-- Add the next character to the hook -->
    (append: ?typewriterOutput)[(print: $typewriterText's $typewriterPos)]

    <!-- Update the position -->
    (set: $typewriterPos to it + 1)

    <!-- If it's gone past the end, stop -->
    (if: $typewriterPos is $typewriterText's length + 1)[
      (stop:)
    ]
  ]
}

(live:4s)[
[[C1 Battle]]]


:: Hack C2 {"position":"875,875","size":"100,100"}
<!-- Set the text to show -->
(set: $typewriterText to "initializing...

ICEBREAKER 2.2.25.111f

Ready!

What would you like to do?
")

{
  <!-- Create a variable to track the position within the $typewriterText string -->
  (set: $typewriterPos to 1)

  <!-- Create a hook to hold the typed text -->
  |typewriterOutput>[]

  <!-- Set a delay of 20ms seconds per loop -->
  (live: 20ms)[

    <!-- Add the next character to the hook -->
    (append: ?typewriterOutput)[(print: $typewriterText's $typewriterPos)]

    <!-- Update the position -->
    (set: $typewriterPos to it + 1)

    <!-- If it's gone past the end, stop -->
    (if: $typewriterPos is $typewriterText's length + 1)[
      (stop:)
    ]
  ]
}

(live:4s)[
[[C2 Battle]]]


:: Hack C3 {"position":"1000,875","size":"100,100"}
<!-- Set the text to show -->
(set: $typewriterText to "initializing...

ICEBREAKER 2.2.25.111f

Ready!

What would you like to do?
")

{
  <!-- Create a variable to track the position within the $typewriterText string -->
  (set: $typewriterPos to 1)

  <!-- Create a hook to hold the typed text -->
  |typewriterOutput>[]

  <!-- Set a delay of 20ms seconds per loop -->
  (live: 20ms)[

    <!-- Add the next character to the hook -->
    (append: ?typewriterOutput)[(print: $typewriterText's $typewriterPos)]

    <!-- Update the position -->
    (set: $typewriterPos to it + 1)

    <!-- If it's gone past the end, stop -->
    (if: $typewriterPos is $typewriterText's length + 1)[
      (stop:)
    ]
  ]
}

(live:4s)[
[[C3 Battle]]]


:: Hack Newspaper {"position":"500,875","size":"100,100"}
<!-- Set the text to show -->
(set: $typewriterText to "initializing...

ICEBREAKER 2.2.25.111f

Ready!

What would you like to do?
")

{
  <!-- Create a variable to track the position within the $typewriterText string -->
  (set: $typewriterPos to 1)

  <!-- Create a hook to hold the typed text -->
  |typewriterOutput>[]

  <!-- Set a delay of 20ms seconds per loop -->
  (live: 20ms)[

    <!-- Add the next character to the hook -->
    (append: ?typewriterOutput)[(print: $typewriterText's $typewriterPos)]

    <!-- Update the position -->
    (set: $typewriterPos to it + 1)

    <!-- If it's gone past the end, stop -->
    (if: $typewriterPos is $typewriterText's length + 1)[
      (stop:)
    ]
  ]
}

(live:4s)[
[[Hack the Newspaper]]]


:: Hack SecCo {"position":"750,875","size":"100,100"}
<!-- Set the text to show -->
(set: $typewriterText to "initializing...

ICEBREAKER 2.2.25.111f

Ready!

What would you like to do?
")

{
  <!-- Create a variable to track the position within the $typewriterText string -->
  (set: $typewriterPos to 1)

  <!-- Create a hook to hold the typed text -->
  |typewriterOutput>[]

  <!-- Set a delay of 20ms seconds per loop -->
  (live: 20ms)[

    <!-- Add the next character to the hook -->
    (append: ?typewriterOutput)[(print: $typewriterText's $typewriterPos)]

    <!-- Update the position -->
    (set: $typewriterPos to it + 1)

    <!-- If it's gone past the end, stop -->
    (if: $typewriterPos is $typewriterText's length + 1)[
      (stop:)
    ]
  ]
}

(live:4s)[
[[SecCo Battle]]]


:: Hack TEC Studios {"position":"625,875","size":"100,100"}
<!-- Set the text to show -->
(set: $typewriterText to "initializing...

ICEBREAKER 2.2.25.111f

Ready!

What would you like to do?
")

{
  <!-- Create a variable to track the position within the $typewriterText string -->
  (set: $typewriterPos to 1)

  <!-- Create a hook to hold the typed text -->
  |typewriterOutput>[]

  <!-- Set a delay of 20ms seconds per loop -->
  (live: 20ms)[

    <!-- Add the next character to the hook -->
    (append: ?typewriterOutput)[(print: $typewriterText's $typewriterPos)]

    <!-- Update the position -->
    (set: $typewriterPos to it + 1)

    <!-- If it's gone past the end, stop -->
    (if: $typewriterPos is $typewriterText's length + 1)[
      (stop:)
    ]
  ]
}

(live:4s)[
[[TEC Studios Battle]]]


:: Hack a Stranger {"position":"1250,750","size":"100,100"}
(collapse:)[
(display:"Random Encounter")
(set:$enemy to $randomEncounter)
(set:$winResult to (go-to:"Stranger Hacked"))
]
(display:"Battle")


:: Hack the Bank {"position":"250,1150","size":"100,100"}
(collapse:)[
(display:"Bank Boss")
(set:$enemy to $bankBoss)
(set:$enemyName to "Un'taeko Ntl Bank")
(set:$winResult to (go-to:"Bank Won"))
(set: $enemyPC to $bankServer)
]
(display:"Battle")


:: Hack the Newspaper {"position":"500,1025","size":"100,100"}
(set: $nespaperHacked to 0)
<!-- Set the text to show -->
(set: $clearText to 0)
(if:$clearText <1)[ 
(set: $typewriterText to "Pinging news.2.corp servers...

Connection established. 

Unknown Netrunner detected.

Connection forced with Unknown Netrunner.


")
]


{
  <!-- Create a variable to track the position within the $typewriterText string -->
  (set: $typewriterPos to 1)

  <!-- Create a hook to hold the typed text -->
  |typewriterOutput>[]

  <!-- Set a delay of 20ms seconds per loop -->
  (live: 10ms)[

    <!-- Add the next character to the hook -->
    (append: ?typewriterOutput)[(print: $typewriterText's $typewriterPos)]

    <!-- Update the position -->
    (set: $typewriterPos to it + 1)

    <!-- If it's gone past the end, stop -->
    (if: $typewriterPos is $typewriterText's length + 1)[
      (stop:)
      
      (live:3s)[
      [[Prepare to Battle->Newspaper Battle]]
      ]
    ]
  ]
}


:: Hacking Options {"position":"1800,1050","size":"100,100"}
(collapse:)[
	(set: $usedRAM to 0)
    (if: $outbreakActive is true)[
    	(set: $usedRAM to 8)
    ]
	(hook: "Hack")[
		<!-- Programs --> 
    	(if: $enemy's "Poisoned" is false)[

			(for: each _download, ...$downloads)[
				(display: "Hack Button")
                ]
        ]
        (else:)[
        	(for: each _download where _download's "Name" is not "Outbreak.dll", ...$downloads)[
				(display: "Hack Button")
        	]
        ]
    ]

                       
        
    ]



:: Header [header] {"position":"600,50","size":"100,100"}
(collapse:)[
(set: $purchasablePrograms to (a:))
(for: each _program, ...$allPrograms)[
	(if: _program's "Purchasable" is true)[
    	(set: $purchasablePrograms to it + (a:_program))
    ]
]

(set:$botnetCount to 0)
(for: each _machine, ...$botnet)[(set:$botnetCount to it+1)]

(set: $allKoresCores to (a:$computerStats's "Core1", $computerStats's "Core2", $computerStats's "Core3", $computerStats's "Core4", $computerStats's "Core5", $computerStats's "Core6", ))

(set:$RAM to 0)

(set: $allKoresRAM to (a:$computerStats's "RAM Slot 1",  $computerStats's "RAM Slot 2", $computerStats's "RAM Slot 3", $computerStats's "RAM Slot 4", $computerStats's "RAM Slot 5", $computerStats's "RAM Slot 6", $computerStats's "RAM Slot 7", $computerStats's "RAM Slot 8"))

<!-- PC Part Stuff -->
(set:$allCores to (a: $rubyCore,$sapphireCore,$emeraldCore,$obsidianCore,$diamondCore))
(set: $allRAM to (a:$8GBRAM, $16GBRAM,$32GBRAM))
(set: $allCoolers to (a: $basicCooler, $advancedCooler, $specialCooler))
(set: $allParts to (a:...$allCores, ...$allRAM, ...$allMotherboards, ...$allCoolers))

	(for: each _RAMStick, ...$allRAM)[
		(if: _RAMStick is not "None")[
			(set: $RAM to it + _RAMStick's RAM)
        ]
    ]
    (set: $availableRAM to $RAM - $usedRAM)
]


:: Home {"position":"900,200","size":"100,100"}
(button:)[[Boot PC ->Computer]]

(button:)[[Go to bed ->Bed]]

(button:)[[Go to Computer Shop ->Computer Shop]] 

(button:)[[Workbench ->Bench]] 


:: IDE {"position":"975,550","size":"100,100"}
(float-box:"X","Y")+(b4r:"solid","double","double","solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)+(css:"margin-top:0px,margin-bottom:0px")[
	(align:"==>")+(box:"=====X")+(css:"margin-top: 0px;offset-position: top 100px;")[
    	(collapse:)[(float-box: "======================XXX=", "=YY=================")+(css: "overflow:hidden; padding:0.1px")+(b4r:"solid","double","double","solid")+(b4r-color:(mix: 0.5, white, 0.5, #00f))+(bg:(mix: 0.5, white, 0.5, #00f))[
        	(hook: "exitButton")[
            	(button:"X")+(css: ".enchantment-button:not(.link) tw-link {padding-top:0.1px; border:1px}")+(color:black)+(hover-style: (color:white))(link-goto:"X", "Computer")
       					 ]
       				 ]
        		]
        	]
            (hook: "IDE")[
			Data Fragments: $playerDataFragments
        	(if: $playerDataFragments is > 3)[
        		Craft a program:
            	(for: each _program where $downloads does not contain _program, ...$allPrograms)[
            		(button:)[(link: _program's Name)[
                    	(set: $downloads to it +(a:_program))
                        (set: $playerDataFragments to it - 4)
                        (rerun: ?IDE)
                    ]
            	]
            ]
        ]
    (else:)[
	There's some broken code here.
]]]


:: Legends of Trii'el Kore {"position":"100,0","size":"100,100"}
<h1>(set: $typewriterText to "Legends of Trii'el:
Kore")
{
  <!-- Create a variable to track the position within the $typewriterText string -->
  (set: $typewriterPos to 1)

  <!-- Create a hook to hold the typed text -->
  |typewriterOutput>[]

  <!-- Set a delay of 20ms seconds per loop -->
  (live: 20ms)[

    <!-- Add the next character to the hook -->
    (append: ?typewriterOutput)[(print: $typewriterText's $typewriterPos)]

    <!-- Update the position -->
    (set: $typewriterPos to it + 1)

    <!-- If it's gone past the end, stop -->
    (if: $typewriterPos is $typewriterText's length + 1)[
      (stop:)
    ]
  ]
}
</h1>
(live: 2s)[




(t8n-depart:"dissolve")+(t8n-arrive:"dissolve")+(button:)[[Press Start->Main Menu]]]


:: Level 1 {"position":"375,1150","size":"100,100"}
(collapse:)[
(display:"Mama Mia")
(set:$enemyName to "Mama Mia")
(set:$enemy to $MamaMia)
(set:$winResult to (go-to:"Mama Mias Hacked"))
(set: $enemyPC to $MamaMiaServer)
(set: $hackSelection to 0)
]
(display:"Battle")




:: Load Game {"position":"750,325","size":"100,100"}
{(if: (saved-games: ) contains "Slot A")[
  (link: "Load game")[(load-game:"Slot A")(go-to:"Home")]
]}


:: Log {"position":"1925,1050","size":"100,100"}
(hook:"Log")[(collapse:)[
	(box:"X")+(b4r:"solid","double","double","solid")+(b4r-color:(mix: 0.5, white, 0.5, #00f))+(b4r-size:10,10,15,15)[
		(if:$log is "you")[
			(if:$playerStat's "Poisoned" is true or $playerStat's "Glitched" is true)[
    			(display:"Player Status Effects")
            	]
    
		(else:)[
        (if: $availableBots is not (a:))[
        =|=
        	(button:)[
            	(link: "Deploy Bot")[
                	(set: $botActive to true)
                    (for: each _bot, ...$availableBots)[
                    	(button:)[(link: _bot's "Name")[
                    		(set: $activeBots to it + (a:_bot))
                            (set: $availableBots to it - (a:_bot))
                            (if: $activeBots contains 0)[
                            	(set: $activeBots to it - (a:0))
                            ]
                    ]]
                	]
                ]
            ]]
           (if: $botActive is true)[
           		(for: each _bot, ...$activeBots)[
                	(set: _rubyCoreCount to 0)
                    (set: _cores to (a:_bot's "Core1",_bot's "Core2",_bot's "Core3",_bot's "Core4",_bot's "Core5",_bot's "Core6"))
                    (if: _cores contains "None")[
                    	(set: _cores to it - (a:"None"))
                    ]
                    (for: each _core where _core is $rubyCore, _cores)[
                    	(set: _rubyCoreCount to it + 1)
                    ]
                	(set: _coreBonus to _rubyCoreCount)
                	(set: $botDamage to it + (random: 5, 10)*(random:1,2)*(_coreBonus+1))
                    (if: $enemyICE >= 1)[
                    	(set: $enemyICE to it - $botDamage)]
                    (else:)[
                    (set: $enemyHealth to it - $botDamage)
                    ]
                ]
                (print: (str:$enemyName)+" took " + (str:$botDamage) + " damage from your botnet!")
           ]
           =|=
			(button:)[
				(link:"Hack")[
					(set:$log to "hacking")
					(rerun:?Battle)
                	]
				]
        	]
    	]
		(else-if:$log is "enemy")[
        (button:)+(box:"X")[
        	(link: "Enemies Turn")[
    		(display:"Enemy Turn")
            ]
            ]]
		(else-if:$log is "hacking")[(display:"Hacking Options")]
		]
	]
]


:: Main Menu {"position":"600,300","size":"100,100"}
(button:)[(link-goto:"New Game")]

(button:)[(link-goto:"Load Game")]


:: Mama Mia {"position":"375,1525","size":"100,100"}
(hook:"Mama Mia")[(collapse:)[(set: $MamaMiasAttacks to (ds: $bruteForce,$ICEPick))
(set: $MamaMia to (dm:"Name", "Mama Mia Runner","Max Health",100, "Health", 100, "Max ICE", 100, "ICE", 100, "Bandwidth", 4, "Attack",10, "Attacks", $MamaMiasAttacks,"Poisoned", false, "Glitched", false))

(set: $MamaMiaServer to (dm: "Name", "Mama Mias Restaurants Ltd","Motherboard", $basicMotherboard, "Core1", $emeraldCore, "Core2", $sapphireCore, "Core3", "None", "Core4", "None", "Core5", "None", "Core6", "None", "RAM Slots", 2,"RAM Slot 1", $8GBRAM,"RAM Slot 2", $8GBRAM, "RAM Slot 3", "None", "RAM Slot 4", "None", "RAM Slot 5", "None", "RAM Slot 6", "None", "RAM Slot 7", "None", "RAM Slot 8", "None", "Cooling System", $basicCooler, "Network Card", $basicNetworkCard))
]]


:: Mama Mia's {"position":"375,750","size":"100,100"}
|==|
=><=
<h2>
MAMA MIA'S PIZZERIA
---
|==|
</h2>
<div>
<h3>
Menu	
</h3>
<br>
|==|
(box:"X")[
<==>
|==
Small	
1299^^CR^^
=|=
Medium
1599^^CR^^
==|
Large
1899^^CR^^
]
|==|
<br>
<==>
---
<h4>
Basic Toppings 
<h5>(200^^CR^^ Each):</h5>

</h4>
<br>
Spicy Meat^^TM^^
<br>
Ground Meat^^TM^^
<br>
...
<br>
<br>
<br>
<br>

(set: $hackSelection to "Level 1")

Copyright 2035 Mama Mia's Pizzeria, a Corporation 2 Company


:: Mama Mias Hacked {"position":"375,1275","size":"100,100"}
(set: $pizzaPlaceHacked to true)
<div>
(box: "X")+(b4r:"solid","double","double","solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)[
Welcome to MAMA MIA'S!
Your rewards level is 9999999999999999999999999999999999999999999999999999
You have 999999999999999999999999999999999 free pizzas!

Would you like to redeem a free pizza?
(button:)[
[[Redeem ->Free Pizza for Life]]]]
</div>


:: Music {"position":"1450,325","size":"100,100"}
(float-box:"X","Y")+(b4r:"solid","double","double","solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)+(css:"margin-top:0px,margin-bottom:0px")[
	(align:"==>")+(box:"=====X")+(css:"margin-top: 0px;offset-position: top 100px;")[
    	(collapse:)[(float-box: "========X", "Y===========")+(css: "overflow:hidden")+(b4r:"solid","double","double","solid")+(b4r-color:(mix: 0.5, white, 0.5, #00f))+(bg:(mix: 0.5, white, 0.5, #00f))[
        	(button:"X")+(css: "border:1px")+(color:black)+(hover-style: (color:white))(link-goto:"X", "Computer")
        ]
        ]]

There are some various music files here. They're mostly alternative rock and edm.
<!-- Would like to make it possible to unlock various tracks through gameplay to be played in a media player in game-->

]


:: New Game {"position":"125,150","size":"100,100"}
(set: $typewriterText to "Your name is Kore. You're a Corporation 2 employee, and you've just come home early from a stressful day of designing casino games. In your spare time, you enjoy hacking, and today you've got all day to spend diving the net for interesting data.")
{
<!-- Reset Stats -->
(display:"A) Startup")

  <!-- Create a variable to track the position within the $typewriterText string -->
  (set: $typewriterPos to 1)

  <!-- Create a hook to hold the typed text -->
  |typewriterOutput>[]

  <!-- Set a delay of 10ms seconds per loop -->
  (live: 10ms)[

    <!-- Add the next character to the hook -->
    (append: ?typewriterOutput)[(print: $typewriterText's $typewriterPos)]

    <!-- Update the position -->
    (set: $typewriterPos to it + 1)

    <!-- If it's gone past the end, stop -->
    (if: $typewriterPos is $typewriterText's length + 1)[
      (stop:)
    ]
  ]
}
(live:4s)[
(color:purple)+(button:)[[Home]]
]


:: Newspaper Battle {"position":"500,1150","size":"100,100"}
(collapse:)[
(display:"Newspaper Runner")
(set:$enemyName to "C2News Runner")
(set:$enemy to $newsRunner)
(set:$winResult to (go-to:"Newspaper Battle Won"))
(set: $enemyPC to $newspaperServer)
(set: $hackSelection to 0)
]
(display:"Battle")


:: Newspaper Battle Won {"position":"500,1400","size":"100,100"}
You hack the Un'taeko Daily News, and discover emails between employees describing an active coverup regarding the recent terrorist attack at the stadium in the Capital.

Would you like to vandalize the newspaper?
(button:)[(link: "Vandalize the newspaper")[(set: $newspaperVandalized to true)]]

(set: $playerDataFragments to it + 4)
(set: $level2Complete to true)
(set:$playerMoney to $playerMoney+10000)
(set: $unsentEmails's 2's "Sent" to true)
(set: $diamondCore's "Purchasable" to true)
(set:$botnet to it + (a:$newspaperServer))

[[Browser]] 
[[Computer]] 


:: Newspaper Runner {"position":"500,1525","size":"100,100"}
(hook:"newspaperRunner")[(set: $newsRunnerAttacks to (ds: $bruteForce, $ICEPick,$poison))
(set: $newsRunner to (dm:"Name", "Un'taeko News", "Max Health",200, "Health", 100, "Max ICE", 100, "ICE", 100, "Bandwidth", 4, "Attack",10, "Attacks", $newsRunnerAttacks,"Poisoned", false, "Glitched", false))
(set: $newspaperServer to (dm: "Name", "Un'taeko Daily News Inc", "Motherboard", $basicMotherboard, "Core1", $rubyCore, "Core2", $emeraldCore, "Core3", "None", "Core4", "None", "Core5", "None", "Core6", "None", "RAM Slots", 2,"RAM Slot 1", $8GBRAM,"RAM Slot 2", $8GBRAM, "RAM Slot 3", "None", "RAM Slot 4", "None", "RAM Slot 5", "None", "RAM Slot 6", "None", "RAM Slot 7", "None", "RAM Slot 8", "None", "Cooling System", $basicCooler, "Network Card", $basicNetworkCard))
]


:: Pictures {"position":"1450,50","size":"100,100"}
<!-- Need to commission/draw art for these-->
[[Graduation Photos]]
[[2036 Summer]]
[[2037 Spring]]

[[Computer]]


:: Player {"position":"600,175","size":"100,100"}
(collapse:)[
	(hook:"Player")[
    	(set:$playerStat to (dm: "Health",100, "Max Health", 100, "Botnet Health", $botnetHealth, "ICE", 100, "Max ICE", 100, "XP", 0, "Level", 1,"Money", 2000,"Poisoned", false, "Glitched", false, "Attack Speed", 0))
		(set:$playerMaxHealth to $playerStat's "Max Health")
		(set:$playerMaxICE to $playerStat's "Max ICE")
		(set:$playerHealth to $playerStat's "Health")
		(set:$playerICE to $playerStat's "ICE")
		(set:$playerMoney to $playerStat's "Money")
        (set: $playerDataFragments to 4)
	]
	(hook:"Kore's PC")[
(set: $computerStats to (dm: "Motherboard", $basicMotherboard, "Core1", $emeraldCore, "Core2", $sapphireCore, "Core3", "None", "Core4", "None", "Core5", "None", "Core6", "None", "RAM Slots", 2,"RAM Slot 1", $8GBRAM,"RAM Slot 2", $8GBRAM, "RAM Slot 3", "None", "RAM Slot 4", "None", "RAM Slot 5", "None", "RAM Slot 6", "None", "RAM Slot 7", "None", "RAM Slot 8", "None", "Cooling System", $basicCooler, "Network Card", $basicNetworkCard))
	]
    (hook: "Kore's Spare Parts")[
    (set: $koresSpareParts to (a: $rubyCore))
]
]




:: Player Status Effects {"position":"1700,1050","size":"100,100"}
{
<!-- Poison Check -->
(if: $playerStat's "Poisoned" is true)[
	(set:$poisonDamage to (random:5,20))
	(set:$playerHealth to it - $poisonDamage)
	You take $poisonDamage from $enemyName's Outbreak.dll!
    (if: $playerHealth is < 1)[
    	(goto: "Game Over")
    ]
	(box:"X")[(button:)[(link:"Ouch")[(set:$log to "hacking")
	(rerun:?Battle)]]
    ]
]

<!-- Glitch Check -->
(else-if: $playerStat's "Glitched" is true)[
	(set: _glitchCheck to (random:1,20))
    (if: _glitchCheck is < 10)[
	Your computer froze for a second!
    
    ]
    (if: _glitchCheck is 20)[
    	(set: $playerStat's "Glitched" to false)
    ]
(button: "X")[(link: "Next")[
    (set: $log to "enemy")
    (rerun:?Battle)]]
]
}


:: Programs {"position":"1800,925","size":"100,100"}
(collapse:)[
<!-- Template -->
(set: $attackTemplate to (dm: "Name",str,"ID", num, "Price", num, "Damage",num, "ICE Damage", num, "Poison",bool, "Heal", num, "ICE Heal", num, "Description",str, "Purchasable", bool, "Glitchery",bool))


<!-- BruteForceAttack -->
(set: $bruteForce to (dm: "Name","BruteForceAttack.bat","ID", 01, "Price", 1000, "Damage",5, "ICE Damage", 0, "Poison",False, "Heal", 0, "ICE Heal", 0, "Description","An attack that deals a strong hit to your opponent, but only after their ICE is down.", "Purchasable", false, "Glitchery",false))

<!-- ICEPick -->
(set: $ICEPick to (dm: "Name","ICEPick.exe","ID", 01, "Price", 1000, "Damage",1, "ICE Damage", 10, "Poison",False, "Heal", 0, "ICE Heal", 0, "Description","A Hacker's primary tool to break through ICE (Intrusion Countermeasures Electronics)", "Purchasable", false, "Glitchery",false))
 
<!-- Enhanced ICEPick -->
(set: $EnhancedICEPick to (dm: "Name","EnhancedICEPick.exe", "ID", 02, "Price", 1000, "Damage", 2, "ICE Damage", 50, "Poison",False, "Heal", 0, "ICE Heal", 0, "Description", "An Enhanced version of the ICEPick. Deals extra damage to ICE. Allows you to hack servers with stronger ICE.", "Purchasable", false, "Glitchery",false))

<!-- Poison -->
(set: $poison to (dm:"Name","Outbreak.dll", "ID", 03, "Price", 1500, "Damage", 0, "ICE Damage", 0, "Poison",True, "Heal", 0, "ICE Heal", 0, "Description","It does what's on the tin!", "Purchasable",true, "Glitchery",false))

<!-- ICE Repair -->
(set: $repairICE to (dm:"Name", "ICERepairHero.exe", "ID", 04, "Price", 2500, "ICE Damage", 0, "Damage", 0, "Poison", False, "Heal", 0, "ICE Heal", 10, "Description", "Quick repair for your personal ICE","Purchasable", true, "Glitchery",false)) 

<!-- Glitchery -->

(set: $glitchery to (dm:"Name", "glitchery.scr", "ID", 05, "Price", 4000, "ICE Damage", 0, "Damage", 0, "Poison",false, "Heal", 0, "ICE Heal", 10, "Description", "Causes target's machine to become unstable and occasionally freeze, preventing them from using any programs for one turn.","Purchasable", true, "Glitchery",true))

<!-- DDOS -->

(set: $DDOS to  (dm:"Name", "DDOS.bat", "ID", 06, "Price", 1000, "ICE Damage", 0, "Damage", 3*$botnetCount, "Poison",false, "Heal", 0, "ICE Heal", 0, "Description", "Overwhelms target's network, dealing damage to their system integrity based on the number of bots in your botnet.","Purchasable", false, "Glitchery",false))

(set:$programsCount to 0)

<!-- defrag.exe -->
(set: $defrag to (dm:"Name", "defrag.exe", "ID", 07, "Price", 5000, "ICE Damage", 0, "Damage", 0, "Poison", False, "Heal", 100, "ICE Heal", 0, "Description", "Quick repair for your HP","Purchasable", false, "Glitchery",false)) 

(set: $allPrograms to (a:))
(set: $allPrograms to it + (a:$ICEPick, $defrag, $glitchery, $repairICE, $bruteForce, $EnhancedICEPick, $poison))

(for:each _program, $allPrograms)[(set:$programsCount to it + 1)]
]


:: Purchase Confirmation {"position":"375,450","size":"100,100"}
(collapse:)[(hidden:)|purchaseConfirmation>[You've purchased (print: $selected)!

(for:each _program, ...$allPrograms)[
(if: _program's Name is $selected)[
	(set: $downloads to it + (a:_program))
    (set: $playerStat's Money to it - _program's Price)
]]]]




:: Random Encounter {"position":"1250,1525","size":"100,100"}
(hook:"RandomEncounter")[(collapse:)[
(display: "Randomized PC")
(set: $enemyPC to $randomizedPC)
(set:$enemyAttacks to (a:$ICEPick))
(for: each _program, ...$allPrograms)[
	(set:$flipResult to (random:0,1))
	(if:$flipResult is >0 and _program is not $DDOS and _program is not $ICEPick)[
		(set:$enemyAttacks to it + (a:_program))]
	(set:$enemyName to $seed + (random:1,$seed))
]
(set: $randomEncounter to (dm:"Max Health", (random:50, 200), "Health", 50, "Max ICE", 100, "ICE", 100, "Bandwidth", 4, "Attack",10, "Attacks", $enemyAttacks,"Poisoned", false, "Glitched", false))
(set: _dieroll to (random: 1, 20))
(if: _dieroll is < 5)[
	(set: $randomEncounter's "Max Health" to it*5)
]
(set: $randomEncounter's "Health" to $randomEncounter's "Max Health")

(set: $randomPC to (dm:"Name",$enemyName, "Motherboard", (either:$allMotherboards), "Core1", (either:$allCores), "Core2", (either:$allCores), "Core3", (either:$allCores), "Core4", (either:$allCores), "Core5", (either:$allCores), "Core6", (either:$allCores), "RAM Slots", 0,"RAM Slot 1", (either:$allRAM),"RAM Slot 2", (either:$allRAM), "RAM Slot 3", (either:$allRAM), "RAM Slot 4", (either:$allRAM), "RAM Slot 5", (either:$allRAM), "RAM Slot 6", (either:$allRAM), "RAM Slot 7", (either:$allRAM), "RAM Slot 8", (either:$allRAM), "Cooling System", (either:$allCoolers), "Network Card", (either:$allNetworkCards)))

(if: $randomPC's "Motherboard" is $basicMotherboard)[
	(set: $randomPC's "Core3" and $randomPC's "Core 4" to "None")]
(if: $randomPC's "Motherboard" is $basicMotherboard or it is $advancedMotherboard)[
    (set: $randomPC's "Core5" and $randomPC's "Core6" to "None")
]
]
]]


:: Randomized PC {"position":"1250,1650","size":"100,100"}
(set: $randomizedPC to (dm: "Name", "None", "Motherboard", $basicMotherboard, "Core1", $emeraldCore, "Core2", $sapphireCore, "Core3", "None", "Core4", "None", "Core5", "None", "Core6", "None", "RAM Slots", 2,"RAM Slot 1", $8GBRAM,"RAM Slot 2", $8GBRAM, "RAM Slot 3", "None", "RAM Slot 4", "None", "RAM Slot 5", "None", "RAM Slot 6", "None", "RAM Slot 7", "None", "RAM Slot 8", "None", "Cooling System", $basicCooler))

(set: $dieroll to (random:1,20))
(if: $dieroll is 20)[
	(set: $randomizedRAM to (either: ...$allRAM))
]
(else:)[
	(set: $randomizedRAM to (either: (a:$allRAM's 1st, $allRAM's 2nd)))
]
(set: $randomizedPC's "Name" to $enemyName)
(set: $randomizedPC's "Motherboard" to (either: ...$allMotherboards))
(set: $randomizedPC's "Core1" to (either: ...$allCores))
(set: $randomizedPC's "Core2" to (either: ...$allCores))
(set: $randomizedPC's "RAM Slot 1" to $randomizedRAM)
(set: $randomizedPC's "RAM Slot 2" to $randomizedRAM)

(if: $randomizedPC's "Motherboard" is $advancedMotherboard or it is $specialMotherboard)[
	(set: $randomizedPC's "Core3" to (either: ...$allCores))
    (set: $randomizedPC's "Core4" to (either: ...$allCores))
	(set: $randomizedPC's "RAM Slot 3" to $randomizedRAM)
	(set: $randomizedPC's "RAM Slot 4" to $randomizedRAM)
]
(if: $randomizedPC's "Motherboard" is $specialMotherboard)[
	(set: $randomizedPC's "Core5" to (either: ...(a:$diamondCore, $obsidianCore,)))
    (set: $randomizedPC's "Core6" to (either: ...$allCores))
	(set: $randomizedPC's "RAM Slot 5" to $randomizedRAM)
	(set: $randomizedPC's "RAM Slot 6" to $randomizedRAM)
	(set: $randomizedPC's "RAM Slot 7" to $randomizedRAM)
	(set: $randomizedPC's "RAM Slot 8" to $randomizedRAM)
]

(set: $allRandosCores to (a: $randomizedPC's "Core1",$randomizedPC's "Core2",$randomizedPC's "Core3",$randomizedPC's "Core4",$randomizedPC's "Core5",$randomizedPC's "Core6",))
(if: $allRandosCores contains "None")[(set: $allRandosCores to it - (a:"None"))]


:: Resume {"position":"1675,675","size":"100,100"}
(float-box:"X","Y")+(b4r:"solid","double","double","solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)+(css:"margin-top:0px,margin-bottom:0px")[
	(align:"==>")+(box:"=====X")+(css:"margin-top: 0px;offset-position: top 100px;")[
    	(collapse:)[(float-box: "========X", "Y===========")+(css: "overflow:hidden")+(b4r:"solid","double","double","solid")+(b4r-color:(mix: 0.5, white, 0.5, #00f))+(bg:(mix: 0.5, white, 0.5, #00f))[
        	(button:"X")+(css: "border:1px")+(color:black)+(hover-style: (color:white))(link-goto:"X", "Computer")
        ]
        ]]
Pikore Rae'en
He/Him
+7127772789

Previous Employment:

Corporation 2 | Un'taeko
Programmer 2037-Present
Worked on many major projects related to casino games and tracking user engagement. Primarily coded in Hartwell and Anchor2

References:

Tonii Piroa | Coworker
+7127773090
Tonii.Piroa@Corp2.corp

ugh why am i even making this there's no one else to hire me anymore
]


:: SecCo {"position":"750,750","size":"100,100"}
<h2> SecCo </h2>

Welcome to SecCo, your first stop for all your security needs. 

Need a personal security detail? Look no further than our professionally trained armed guards. 
Our guards are trained in the same facility as C2 Security Forces, and will put their lives on the line to keep yours safe.
Email one of our representatives today to get started.


Need a home security system? We got you covered.

Already have one?
Login to access your home security system.


(set: $hackSelection to "Hack SecCo")



:: SecCo Battle {"position":"750,1150","size":"100,100"}
(collapse:)[
(display:"SecCo Boss")
(set:$enemyName to "SecCo Server")
(set:$enemy to $SecCo)
(set:$winResult to (go-to:"SecCo Won"))
(set: $enemyPC to $SecCoPC)
(set: $hackSelection to 0)
]
(display:"Battle")


:: SecCo Boss {"position":"750,1525","size":"100,100"}
(hook:"SecCo")[(set: $SecCoAttacks to (ds: $EnhancedICEPick, $bruteForce, $poison))
(set: $SecCo to (dm:"Name", "SecCo Agent","Max Health",250, "Health", 250, "Max ICE", 250, "ICE", 250, "Bandwidth", 4, "Attack",10, "Attacks", $SecCoAttacks,"Poisoned", false, "Glitched", false))

(set: $SecCoPC to (dm: "Name", "Security Company, Inc","Motherboard", $advancedMotherboard, "Core1", $emeraldCore, "Core2", $rubyCore, "Core3", $rubyCore, "Core4", $rubyCore, "Core5", "None", "Core6", "None", "RAM Slots", 2,"RAM Slot 1", $8GBRAM,"RAM Slot 2", $8GBRAM, "RAM Slot 3", $8GBRAM, "RAM Slot 4", $8GBRAM, "RAM Slot 5", "None", "RAM Slot 6", "None", "RAM Slot 7", "None", "RAM Slot 8", "None", "Cooling System", $advancedCooler, "Network Card", $advancedNetworkCard))
]


:: SecCo Won {"position":"750,1400","size":"100,100"}
You've disabled SecCo's server. What could go wrong?

(set: $playerDataFragments to it + 4)
(set: $level4Complete to true)
(set:$playerMoney to $playerMoney+25000)
(set: $unsentEmails's 1st's "Sent" to true)
(set: $advancedMotherboard's "Purchasable" to true)
(set:$botnet to it + (a:$SecCo))

[[Browser]] 
[[Computer]] 



:: Stranger Hacked {"position":"1250,1400","size":"100,100"}
(box: "X")+(b4r:"solid","double","double","solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)[
You've hacked a complete stranger! That was nice of you.
Their machine is part of your botnet now.
(set: $playerDataFragments to it + (random:1,4))
(set:$playerMoney to $playerMoney+5000)
(set:$botnet to it + (a:$randomizedPC))
(button:)[(link:"Browser")[(go-to:"Browser")]]]


:: TEC Studios {"position":"625,750","size":"100,100"}
|==|
<h1>TEC Studios</h1>


The Entertainment Company is a Corporation 2 Subsidiary and all rights belong to Corporation 2

(set: $hackSelection to "Hack TEC Studios")



:: TEC Studios Battle {"position":"625,1150","size":"100,100"}
(collapse:)[
(display:"TEC Studios Boss")
(set:$enemyName to "TEC Studios Server")
(set:$enemy to $TECStudios)
(set:$winResult to (go-to:"TEC Studios Won"))
(set: $enemyPC to $TECPC)
(set: $hackSelection to 0)
]
(display:"Battle")


:: TEC Studios Boss {"position":"625,1525","size":"100,100"}
(hook:"TEC Studios")[(set: $TECAttacks to (ds: $bruteForce,$ICEPick, $poison, $repairICE))
(set: $TECStudios to (dm:"Name", "TEC Runner", "Max Health",200, "Health", 200, "Max ICE", 200, "ICE", 200, "Bandwidth", 4, "Attack",10, "Attacks", $TECAttacks,"Poisoned", false, "Glitched", false))

(set: $TECPC to (dm: "Name", "The Entertainment Company", "Motherboard", $advancedMotherboard, "Core1", $emeraldCore, "Core2", $sapphireCore, "Core3", $rubyCore, "Core4", $rubyCore, "Core5", "None", "Core6", "None", "RAM Slots", 2,"RAM Slot 1", $8GBRAM,"RAM Slot 2", $8GBRAM, "RAM Slot 3", $8GBRAM, "RAM Slot 4", $8GBRAM, "RAM Slot 5", "None", "RAM Slot 6", "None", "RAM Slot 7", "None", "RAM Slot 8", "None", "Cooling System", $basicCooler, "Network Card", $basicNetworkCard))
]


:: TEC Studios Won {"position":"625,1400","size":"100,100"}
You've defeated TEC Studios, and uncovered some interesting things about the way they spread propoganda through their social media networks

(set: $playerDataFragments to it + 4)
(set: $level3Complete to true)
(set:$playerMoney to $playerMoney+15000)
(set: $unsentEmails's 1's "Sent" to true)
(set: $obsidianCore's "Purchasable" to true)
(set:$botnet to it + (a:$TECPC))
[[Browser]]
[[Computer]] 


:: Trash {"position":"1325,50","size":"100,100"}
It's empty...
<!-- Maybe put something in here during gameplay-->
[[Computer]]


:: Un'taeko Daily News {"position":"500,750","size":"100,100"}
(box:"=XXX=")[
<h2>Un'taeko Daily News</h2>
</div>
]
(if: $day is >= 3)[
<div>
=|=
<h4>Alarming rise in Flitflower use among teenagers</h4>
=|=
<h4>Remembering the lost at Dani Riiho's show</h4>
=|=
<h4>A RealBerry^^TM^^ Cake Recipe</h4>
</div>
]
<br>
(if: $day is >= 2)[
<div>
=|=
<h4>Bombing at Dani Riiho's Show</h4>
by Fili Arny
A bombing has occured at the pop star's show. Eyewitnesses report magic users known as "Aelma" had been seen throwing fireballs at the show after the main explosion caused major damage to the building, resulting in the roof collapsing.
Aelma had previously been believed to be extinct for 14 years, after the Second Assault on Arsinvar. 
(if: $newspaperVandalized)[We have reason to suspect that Corporation 1 may have been utilizing what's known as a "false flag operation" to lay blame on the Aelma for unknown reasons.]
This is a developing story and may be updated when new information arises.
=|=
<h4>Hackers in Un'taeko</h4>
by Tili Arny
Today in Un'taeko, a local Pizza Place known as Mama Mia's was hacked by a mysterious group known only as "SCOUTS", who vandalized the webpage belonging to Mama Mia's.
(if: $newspaperVandalized)[The hackers also rewarded all loyal Corporation 2 customers with an infinite number of rewards points. Hurry and get a free pizza while it lasts!]
This hacker group hasn't previously been heard from before, and the government reports that they're "nothing to be afraid of" and that they're "working on it".
=|=
<h4>Deviled Egg Recipe</h4>
by Dres Mila
My mother once told me the secret to a great deviled egg recipe starts with great eggs. I told her she was delirious and needed to go back to bed. There haven't been real eggs in Un'taeko since the great war! How am I supposed to get fresh eggs? So here's how I, the great chef Bela will show you how to make MY Deviled Eggs, using SynthEggIcTM Eggs!
</div>
]
<div>
=|=
<h4>Cabrons celebrate 100 year victory against the Aelma</h4>
by Ammet Sarille
Today marks the 300 year anniversary of the Cabrons assault on the Aelmic Capitol of Arsinvar. This massive battle brought the former empire to its knees, and paved the way for the freedom of humanity from their former masters. Celebrations have begun in all three of the capital cities, as are the Cabrons who are holding a tournament tonight viewable on C2TV
The Cabron Company, known colloquially as the Witch Hunters, are the only independent corporation to currently exist legally in all of Trii'el. While its speculated that this distinct privilege is due to payments made to the CEOs of the other Corporations, there is no evidence to support these claims. It's more likely due to tensions between Corporation 2's CEO (who own the majority of law enforcement and security services)  and the Cabron's Commander in Chief Riiho.
=|=
<h4>Dangerous Weather Conditions on Un'rael Island</h4>
by Scarla Edelte
It's hurricane season in Un'taeko, and Hurricane Abot has arrived to remind us of that fact. Flood watches are in effect across all western islands. Un'rael Island is expected to get the worst of it, with power outages expected and flash floods imminent. Make sure to have water stocked up, flashlights ready, and any open files saved.
=|=
<h4>Chocolate^^TM^^ Chip Cookie recipe</h4>
by Teri Blecok
My grandmother taught me the most important ingredient when you're baking chocolate chip cookies isn't actually the chocolate chips! It's actually the quality of the eggs you're using. And no one has better eggs than EGGCO^^TM^^! So today, I'll show you a recipe for the best damn Chocolate^^TM^^ Chip Cookie you've ever eaten, using my favorite EGGCO^^TM^^ eggs!
</div>
<div>

<br>
<br>
<br>
|==|

Un'taeko Daily News is a member of the Corporation 2 family

</div>

(set: $hackSelection to "Hack Newspaper")




:: selectedEmail {"position":"1100,400","size":"100,100"}
(hook: "emailWindow")[(t8n:"zoom")[(float-box:"==XXXXXXXX=","=YYYYYYYYYYY=")+(css: "z-index: 2; overflow: hidden")+(b4r: "solid", "double", "double", "solid")+(b4r-colour:(mix: 0.5, white, 0.5, #00f))+(b4r-size: 20,20,30,30)+(bg: black)[
(float-box: "================X==", "==YY================")+(css: "overflow:hidden; margin-top: 0.1px; padding: 0.1px;")+(b4r:"solid","double","double","solid")+(b4r-color:(mix: 0.5, white, 0.5, #00f))+(bg:(mix: 0.5, white, 0.5, #00f))[(button:"X")+(color:black)+(hover-style: (color:white))[(link:"X")[(hide:?emailWindow)(rerun:?emailHook)]]]
            (for:each _email, ...$koreEmails)[
(if: $selected is _email's Subject)[
(set: $selected to _email)
(set: $koreEmails to it - (a:_email))
From: (print:$selected's Sender)
To: (print:$selected's Receiver)
Subject: (print:$selected's Subject)

(print:$selected's Body)

(set: $selected's "Read" to true)
(set: $koreEmails to it + (a:$selected))
]]]]]


:: StoryStylesheet [stylesheet]
.enchantment-button {
  color: #af8aff;
}

.enchantment-button {
color: rgb(175, 138, 255);
}

.enchantment-button:not(.link) tw-link:active {
  border-radius: 0.1px; 
  border:1px; 
  margin-top: 0.1px;
  color: #af8aff;
}

.enchantment-button:not(.link) tw-link {
  border-radius: 0.1px;
  color: #af8aff;
  padding-top: 25px;
  padding-bottom:25px;
  margin:0.1px;
}